AT_SETUP([DIV/MUL ORDER])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC 99v999.
       PROCEDURE        DIVISION.
           COMPUTE X = 1 / 3 * 5.      *>WARN
           COMPUTE X = 1 * 3 / 5.      *>NO WARN
           COMPUTE X = 9 / 1 / 3 * 5.  *>WARN
           COMPUTE X = 1 / 3 * 5 * 9.  *>WARN
           COMPUTE X = 1 / 3 + 9 * 5.  *>NO WARN
           COMPUTE X = 9 + 1 / 3 * 5.  *>WARN
           COMPUTE X = 1 / 3 * 5 + 9.  *>WARN
           COMPUTE X = 1 / 3 * 5 + 2 / 6 * 10.  *>WARN TWICE
           GOBACK.
])

AT_CHECK([${COMPILE_JP_COMPAT} -Wcompat prog.cob], [0], [],
[prog.cob:8: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:10: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:11: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:13: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:14: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:15: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:15: Warning: MUL operation after DIV can cause the precision issue.
])

AT_CLEANUP

AT_SETUP([GO TO escape SECTION])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 TBLS.
         02 TBLA OCCURS 2 TIMES
            ASCENDING KEY IS FK
            INDEXED BY       IX.
            03 FK PIC 9.
            03 FV PIC 9.
       PROCEDURE        DIVISION.
       S-SRC        SECTION.
       S1.
           GO TO S2.
       S2.
           GO TO D1.
           IF 1 = 1 THEN GO TO D2.
           SEARCH ALL TBLA WHEN FK(IX) = 1 GO TO D2.
           CALL "NONE"
             ON EXCEPTION GO TO D1
             NOT ON EXCEPTION GO TO D2.
           PERFORM UNTIL 1 = 1 GO TO D1 END-PERFORM.
       S3.
           GO TO D1.
           GO TO D2.
           NEXT SENTENCE.
       S-DST        SECTION.
       D1.
       D2.
           GOBACK.
])

AT_CHECK([${COMPILE_JP_COMPAT} -Wcompat prog.cob], [0], [],
[prog.cob: In paragraph 'S3':
prog.cob:27: Warning: NEXT SENTENCE is archaic in jp-compat
prog.cob: In paragraph 'S2':
prog.cob:17: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:18: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:19: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:21: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:22: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:23: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob: In paragraph 'S3':
prog.cob:25: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:26: Warning: GO TO escape from SECTION S-SRC to S-DST
])

AT_CLEANUP

AT_SETUP([jp-comat - X Literal])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC X(2) VALUE X'CEB1'.
       PROCEDURE        DIVISION.
           MOVE  X'CEB2' TO X.
           GOBACK.
])

AT_CHECK([${COMPILE_JP_COMPAT} -Wcompat prog.cob], [0], [],
[prog.cob:6: Warning: X Binary literal found.
prog.cob:8: Warning: X Binary literal found.
])

AT_CLEANUP

AT_SETUP([jp-compat NX Literal])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC N(1) VALUE NX'CEB1'.
       PROCEDURE        DIVISION.
           MOVE  NX'CEB2' TO X.
           GOBACK.
])

AT_CHECK([${COMPILE_JP_COMPAT} -Wcompat prog.cob], [0], [],
[prog.cob:6: Warning: NX Binary literal found.
prog.cob:8: Warning: NX Binary literal found.
])

AT_CLEANUP
