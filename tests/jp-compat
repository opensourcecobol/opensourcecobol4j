#! /bin/sh
# Generated from jp-compat.at by GNU Autoconf 2.69.
#
# Copyright (C) 2009-2012 Free Software Foundation, Inc.
#
# This test suite is free software; the Free Software Foundation gives
# unlimited permission to copy, distribute and modify it.
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :

else
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1
test -x / || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null; then :
  as_have_required=yes
else
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :

else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir/$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi; }
IFS=$as_save_IFS


      if test "x$CONFIG_SHELL" != x; then :
  export CONFIG_SHELL
             # We cannot yet assume a decent shell, so we have to provide a
# neutralization value for shells without unset; and this also
# works around shells that cannot unset nonexistent variables.
# Preserve -v and -x to the replacement shell.
BASH_ENV=/dev/null
ENV=/dev/null
(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
case $- in # ((((
  *v*x* | *x*v* ) as_opts=-vx ;;
  *v* ) as_opts=-v ;;
  *x* ) as_opts=-x ;;
  * ) as_opts= ;;
esac
exec $CONFIG_SHELL $as_opts "$as_myself" ${1+"$@"}
# Admittedly, this is quite paranoid, since all the known shells bail
# out after a failed `exec'.
$as_echo "$0: could not re-execute with $CONFIG_SHELL" >&2
exit 255
fi

    if test x$as_have_required = xno; then :
  $as_echo "$0: This script requires a shell more modern than all"
  $as_echo "$0: the shells that I found on your system."
  if test x${ZSH_VERSION+set} = xset ; then
    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
  else
    $as_echo "$0: Please tell bug-autoconf@gnu.org about your system,
$0: including any error possibly output before this
$0: message. Then install a modern shell, or manually run
$0: the script under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p

# as_fn_executable_p FILE
# -----------------------
# Test if FILE is an executable regular file.
as_fn_executable_p ()
{
  test -f "$1" && test -x "$1"
} # as_fn_executable_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have
  # already done that, so ensure we don't try to do so again and fall
  # in an infinite loop.  This has already happened in practice.
  _as_can_reexec=no; export _as_can_reexec
  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -pR'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -pR'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -pR'
  fi
else
  as_ln_s='cp -pR'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_test_x='test -x'
as_executable_p=as_fn_executable_p

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"





SHELL=${CONFIG_SHELL-/bin/sh}

# How were we run?
at_cli_args="$@"


# Not all shells have the 'times' builtin; the subshell is needed to make
# sure we discard the 'times: not found' message from the shell.
at_times_p=false
(times) >/dev/null 2>&1 && at_times_p=:

# CLI Arguments to pass to the debugging scripts.
at_debug_args=
# -e sets to true
at_errexit_p=false
# Shall we be verbose?  ':' means no, empty means yes.
at_verbose=:
at_quiet=
# Running several jobs in parallel, 0 means as many as test groups.
at_jobs=1
at_traceon=:
at_trace_echo=:
at_check_filter_trace=:

# Shall we keep the debug scripts?  Must be `:' when the suite is
# run by a debug script, so that the script doesn't remove itself.
at_debug_p=false
# Display help message?
at_help_p=false
# Display the version message?
at_version_p=false
# List test groups?
at_list_p=false
# --clean
at_clean=false
# Test groups to run
at_groups=
# Whether to rerun failed tests.
at_recheck=
# Whether a write failure occurred
at_write_fail=0

# The directory we run the suite in.  Default to . if no -C option.
at_dir=`pwd`
# An absolute reference to this testsuite script.
case $as_myself in
  [\\/]* | ?:[\\/]* ) at_myself=$as_myself ;;
  * ) at_myself=$at_dir/$as_myself ;;
esac
# Whether -C is in effect.
at_change_dir=false

# Whether to enable colored test results.
at_color=no
# List of the tested programs.
at_tested='cobc'
# As many question marks as there are digits in the last test group number.
# Used to normalize the test group numbers so that `ls' lists them in
# numerical order.
at_format='???'
# Description of all the test groups.
at_help_all="1;split-keys.at:1;SPLIT KEYS (ALTERNATE KEY);;
2;split-keys.at:53;SPLIT KEYS (ALTERNATE KEY - NOT YET);;
3;split-keys.at:107;SPLIT KEYS (RECORD KEY);;
4;split-keys.at:171;SPLIT KEYS (RECORD KEY - NOT YET);;
5;split-keys.at:238;SPLIT KEYS (START Syntax - EQUAL);;
6;split-keys.at:302;SPLIT KEYS (START Syntax - EQUAL - NOT YET);;
7;split-keys.at:369;SPLIT KEYS (START Syntax - GREATER THAN);;
8;split-keys.at:433;SPLIT KEYS (START Syntax - GREATER THAN - NOT YET);;
9;split-keys.at:500;SPLIT KEYS (key unmatch);;
10;compat-check.at:1;DIV/MUL ORDER;;
11;compat-check.at:33;GO TO escape SECTION;;
12;compat-check.at:85;jp-comat - X Literal;;
13;compat-check.at:105;jp-compat NX Literal;;
14;copy-leading-trailing.at:1;COPY REPLACING LEADING;copy;
15;copy-leading-trailing.at:26;COPY REPLACING TRAILING;copy;
16;copy-leading-trailing.at:51;COPY REPLACING LEADING TRAILING;copy;
17;end-program-wrong.at:1;Allow wrong pgm-name in END-PROGRAM;;
18;evaluate-also-missing.at:1;Allow missing ALSO in EVALUATE-WHEN;;
19;evaluate-also-missing.at:25;Allow missing both ALSO and class condition IS in EVALUATE;;
20;empty-imperative.at:1;Allow empty EVALUATE-WHEN OTHER;;
21;empty-imperative.at:24;Allow empty ELSE;;
22;empty-imperative.at:46;Empty IF by unsupported stmt;;
23;empty-imperative.at:64;Allow empty EVALUATE- before WHEN OTHER;;
24;empty-imperative.at:88;Allow empty EVALUATE- semantics;;
25;empty-imperative.at:111;Allow empty EVALUATE- semantics 2;;
26;empty-imperative.at:136;Allow empty EVALUATE- semantics 3;;
27;spl-registers.at:1;PROGRAM-STATUS;;
28;spl-registers.at:16;SORT-STATUS (alias SORT-RETURN);;
29;spl-registers.at:32;SORT-STATUS (Break in input section);;
30;spl-registers.at:96;SORT-STATUS (Break in output section);;
31;spl-registers.at:160;SORT-STATUS (Break in section with THRU);;
32;spl-registers.at:228;SORT-STATUS break in MERGE;;
33;spl-registers.at:288;SORT-STATUS break with No SORT-STATUS in pgm;;
34;special-names.at:1;ACCEPT ARGUMENT-NUMBER;;
35;special-names.at:24;ACCEPT ARGUMENT-VALUE;;
36;special-names.at:48;ACCEPT ENVIRONMENT-VALUE;;
37;special-names.at:72;DISPLAY ARGUMENT-NUMBER;;
38;special-names.at:96;DISPLAY ENVIRONMENT-NAME;;
39;special-names.at:120;DISPLAY ENVIRONMENT-VALUE;;
40;special-names.at:148;SPECIAL NAMES unterminated;;
41;intr-funcs.at:1;FUNCTION LENG (fixed);;
42;intr-funcs.at:21;FUNCTION LENG (occur. depending);;
43;intr-funcs.at:44;FUNCTION LENGTH-AN (fixed);;
44;intr-funcs.at:64;FUNCTION LENGTH-AN (occur. depending);;
45;file-control.at:1;Allow no file open (I-O, SEQUENTIAL);;
46;file-control.at:32;Allow no file open (I-O, LINE SEQ);;
47;file-control.at:63;Allow no file open (I-O, RELATIVE);;
48;file-control.at:96;Allow no file open (I-O, INDEXED);;
49;file-control.at:129;Allow no file open (EXTEND, SEQUENTIAL);;
50;file-control.at:160;Allow no file open (EXTEND, LINE SEQ);;
51;file-control.at:191;Allow no file open (EXTEND, RELATIVE);;
52;file-control.at:224;Allow no file open (EXTEND, INDEXED);;
53;file-control.at:257;Allow file delete (SEQUENTIAL);;
54;file-control.at:289;Allow file delete (LINE SEQ);;
55;file-control.at:321;Allow file delete (RELATIVE);;
56;file-control.at:355;Allow file delete (INDEXED);;
57;file-control.at:391;Allow file delete (INDEXED) - not available;;
58;file-control.at:427;Assume REWRITE for WRITE on OPEN I-O;;
59;file-control.at:457;READ/WRITE INVALID KEY on SEQUENTIAL;;
60;file-control.at:492;NOMINAL KEY (PENDING);;
61;file-control.at:520;ASSIGN TO multiple Devs. (PENDING);;
62;file-control.at:545;ASSIGN TO multiple Devs. (PENDING);;
63;file-control.at:568;ignore SELECT RESERVE 'NO';;
64;file-userfh.at:1;USERFH - READ LOCK - so;;
65;file-userfh.at:48;USERFH - READ LOCK - dll;;
66;copy-joining.at:1;COPY JOINING AS PREFIX;copy;
67;copy-joining.at:25;COPY JOINING AS SUFFIX;copy;
68;copy-joining.at:49;JOINING in RECURSIVE COPY;copy;
69;copy-joining.at:77;JOINed in REDEFINES clause;copy;
70;copy-joining.at:102;COPY JOINING EXISTING NAME;;
71;copy-joining.at:127;COPY JOINING Group fields;;
72;copy-joining.at:154;*NO* JOINING following JOINING ;;
73;copy-joining.at:184;*NO* JOINING FILLER;;
74;assign-devicename.at:1;ASSIGN coded device name;;
75;assign-devicename.at:30;ASSIGN coded device w/o def.name;;
76;assign-devicename.at:59;ASSIGN coded device name by env.var;;
77;assign-devicename.at:88;ASSIGN coded device w/o def.name by env.var;;
78;job-date.at:1;COB_DATE;;
79;job-date.at:25;COB_DATE YYYYMMDD;;
80;job-date.at:48;COB_DATE DAY;;
81;job-date.at:70;COB_DATE DAY YYYYDDD;;
82;job-date.at:92;COB_DATE FUNC. CURRENT-DATE;;
83;job-date.at:116;COB_DATE FUNC. CURRENT-DATE of time;;
84;nibble-c-for-unsigned.at:1;Decimal nibble C as unsigned;;
85;upsi-x.at:1;UPSI-x;;
86;cob68-copy.at:1;COBOL68 COPY;;
87;cob68-copy.at:25;COBOL68 COPY nested;;
88;cob68-copy.at:53;COBOL68 COPY nested fragments;;
89;cob68-copy.at:81;COBOL68 COPY nested w/ normal;;
90;cob68-copy.at:109;COBOL68 COPY nested w/ normal 2;;
91;switch-no-mnemonic.at:1;SWITCH-x with no mnemonic name;;
92;data-desc-no-dot.at:1;Data description unterminated;;
93;data-desc-no-dot.at:20;Data desc. ambiguous level-num 1;;
94;data-desc-no-dot.at:39;Data desc. ambiguous level-num 2;;
95;data-desc-no-dot.at:59;Data desc. level-num error after 88;;
96;data-desc-no-dot.at:83;Data desc. ambiguous level-num (degrade check);;
97;sort-key-is.at:1;SORT KEY IS;;
98;search-key-in-rhs.at:1;SEARCH KEY IN RHS;;
99;verbose-runtime.at:1;COB_VERBOSE file sort;;
100;occurs-param-order.at:1;OCCURS INDEXED before KEY;;
101;io-control.at:1;I-O-CONTROL clauses unterminated;;
102;io-control.at:27;APPLY Clauses (not supported);;
103;greater-less-than-equal.at:1;GREATER/LESS THAN (implicit 'OR') EQUAL;;
104;file-desc.at:1;ignore invalid (too short) RECORD CONTAINS ;;
105;file-desc.at:32;ignore invalid (too large) RECORD CONTAINS ;;
106;abort-on-file-error.at:1;Abort option (default) on non-fatal f-status;;
107;abort-on-file-error.at:35;Abort option (fatal) on non-fatal f-status;;
108;abort-on-file-error.at:69;Abort option (default) on fatal f-status;;
109;abort-on-file-error.at:100;Abort option (fatal) on fatal file status;;
110;system-routine.at:1;CALL C\$CALLEDBY;;
111;system-routine.at:45;CALL C\$LIST-DIRECTORY;;
112;catch-exception.at:3;Divide by zero: by '0' - option yes;;
113;catch-exception.at:26;Divide by zero: by '0' - option no;;
114;catch-exception.at:51;Divide by zero: by variable - option yes;;
115;catch-exception.at:77;Divide by zero: by variable - option no;;
116;catch-exception.at:103;Divide by zero: by '0' compute - option yes;;
117;catch-exception.at:126;Divide by zero: by '0' compute - option no;;
118;catch-exception.at:151;Divide by zero: by variable compute - option yes;;
119;catch-exception.at:177;Divide by zero: by variable compute - option no;;
120;catch-exception.at:204;Divide by zero: by variable with on size error;;
"
# List of the all the test groups.
at_groups_all=`$as_echo "$at_help_all" | sed 's/;.*//'`

# at_fn_validate_ranges NAME...
# -----------------------------
# Validate and normalize the test group number contained in each variable
# NAME. Leading zeroes are treated as decimal.
at_fn_validate_ranges ()
{
  for at_grp
  do
    eval at_value=\$$at_grp
    if test $at_value -lt 1 || test $at_value -gt 120; then
      $as_echo "invalid test group: $at_value" >&2
      exit 1
    fi
    case $at_value in
      0*) # We want to treat leading 0 as decimal, like expr and test, but
	  # AS_VAR_ARITH treats it as octal if it uses $(( )).
	  # With XSI shells, ${at_value#${at_value%%[1-9]*}} avoids the
	  # expr fork, but it is not worth the effort to determine if the
	  # shell supports XSI when the user can just avoid leading 0.
	  eval $at_grp='`expr $at_value + 0`' ;;
    esac
  done
}

at_prev=
for at_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$at_prev"; then
    at_option=$at_prev=$at_option
    at_prev=
  fi

  case $at_option in
  *=?*) at_optarg=`expr "X$at_option" : '[^=]*=\(.*\)'` ;;
  *)    at_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $at_option in
    --help | -h )
	at_help_p=:
	;;

    --list | -l )
	at_list_p=:
	;;

    --version | -V )
	at_version_p=:
	;;

    --clean | -c )
	at_clean=:
	;;

    --color )
	at_color=always
	;;
    --color=* )
	case $at_optarg in
	no | never | none) at_color=never ;;
	auto | tty | if-tty) at_color=auto ;;
	always | yes | force) at_color=always ;;
	*) at_optname=`echo " $at_option" | sed 's/^ //; s/=.*//'`
	   as_fn_error $? "unrecognized argument to $at_optname: $at_optarg" ;;
	esac
	;;

    --debug | -d )
	at_debug_p=:
	;;

    --errexit | -e )
	at_debug_p=:
	at_errexit_p=:
	;;

    --verbose | -v )
	at_verbose=; at_quiet=:
	;;

    --trace | -x )
	at_traceon='set -x'
	at_trace_echo=echo
	at_check_filter_trace=at_fn_filter_trace
	;;

    [0-9] | [0-9][0-9] | [0-9][0-9][0-9] | [0-9][0-9][0-9][0-9])
	at_fn_validate_ranges at_option
	as_fn_append at_groups "$at_option$as_nl"
	;;

    # Ranges
    [0-9]- | [0-9][0-9]- | [0-9][0-9][0-9]- | [0-9][0-9][0-9][0-9]-)
	at_range_start=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_start
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,$p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    -[0-9] | -[0-9][0-9] | -[0-9][0-9][0-9] | -[0-9][0-9][0-9][0-9])
	at_range_end=`echo $at_option |tr -d X-`
	at_fn_validate_ranges at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '1,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    [0-9]-[0-9] | [0-9]-[0-9][0-9] | [0-9]-[0-9][0-9][0-9] | \
    [0-9]-[0-9][0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9] | \
    [0-9][0-9]-[0-9][0-9][0-9] | [0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9] | \
    [0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] | \
    [0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9] )
	at_range_start=`expr $at_option : '\(.*\)-'`
	at_range_end=`expr $at_option : '.*-\(.*\)'`
	if test $at_range_start -gt $at_range_end; then
	  at_tmp=$at_range_end
	  at_range_end=$at_range_start
	  at_range_start=$at_tmp
	fi
	at_fn_validate_ranges at_range_start at_range_end
	at_range=`$as_echo "$at_groups_all" | \
	  sed -ne '/^'$at_range_start'$/,/^'$at_range_end'$/p'`
	as_fn_append at_groups "$at_range$as_nl"
	;;

    # Directory selection.
    --directory | -C )
	at_prev=--directory
	;;
    --directory=* )
	at_change_dir=:
	at_dir=$at_optarg
	if test x- = "x$at_dir" ; then
	  at_dir=./-
	fi
	;;

    # Parallel execution.
    --jobs | -j )
	at_jobs=0
	;;
    --jobs=* | -j[0-9]* )
	if test -n "$at_optarg"; then
	  at_jobs=$at_optarg
	else
	  at_jobs=`expr X$at_option : 'X-j\(.*\)'`
	fi
	case $at_jobs in *[!0-9]*)
	  at_optname=`echo " $at_option" | sed 's/^ //; s/[0-9=].*//'`
	  as_fn_error $? "non-numeric argument to $at_optname: $at_jobs" ;;
	esac
	;;

    # Keywords.
    --keywords | -k )
	at_prev=--keywords
	;;
    --keywords=* )
	at_groups_selected=$at_help_all
	at_save_IFS=$IFS
	IFS=,
	set X $at_optarg
	shift
	IFS=$at_save_IFS
	for at_keyword
	do
	  at_invert=
	  case $at_keyword in
	  '!'*)
	    at_invert="-v"
	    at_keyword=`expr "X$at_keyword" : 'X!\(.*\)'`
	    ;;
	  esac
	  # It is on purpose that we match the test group titles too.
	  at_groups_selected=`$as_echo "$at_groups_selected" |
	      grep -i $at_invert "^[1-9][^;]*;.*[; ]$at_keyword[ ;]"`
	done
	# Smash the keywords.
	at_groups_selected=`$as_echo "$at_groups_selected" | sed 's/;.*//'`
	as_fn_append at_groups "$at_groups_selected$as_nl"
	;;
    --recheck)
	at_recheck=:
	;;

    *=*)
	at_envvar=`expr "x$at_option" : 'x\([^=]*\)='`
	# Reject names that are not valid shell variable names.
	case $at_envvar in
	  '' | [0-9]* | *[!_$as_cr_alnum]* )
	    as_fn_error $? "invalid variable name: \`$at_envvar'" ;;
	esac
	at_value=`$as_echo "$at_optarg" | sed "s/'/'\\\\\\\\''/g"`
	# Export now, but save eval for later and for debug scripts.
	export $at_envvar
	as_fn_append at_debug_args " $at_envvar='$at_value'"
	;;

     *) $as_echo "$as_me: invalid option: $at_option" >&2
	$as_echo "Try \`$0 --help' for more information." >&2
	exit 1
	;;
  esac
done

# Verify our last option didn't require an argument
if test -n "$at_prev"; then :
  as_fn_error $? "\`$at_prev' requires an argument"
fi

# The file containing the suite.
at_suite_log=$at_dir/$as_me.log

# Selected test groups.
if test -z "$at_groups$at_recheck"; then
  at_groups=$at_groups_all
else
  if test -n "$at_recheck" && test -r "$at_suite_log"; then
    at_oldfails=`sed -n '
      /^Failed tests:$/,/^Skipped tests:$/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^Unexpected passes:$/,/^## Detailed failed tests/{
	s/^[ ]*\([1-9][0-9]*\):.*/\1/p
      }
      /^## Detailed failed tests/q
      ' "$at_suite_log"`
    as_fn_append at_groups "$at_oldfails$as_nl"
  fi
  # Sort the tests, removing duplicates.
  at_groups=`$as_echo "$at_groups" | sort -nu | sed '/^$/d'`
fi

if test x"$at_color" = xalways \
   || { test x"$at_color" = xauto && test -t 1; }; then
  at_red=`printf '\033[0;31m'`
  at_grn=`printf '\033[0;32m'`
  at_lgn=`printf '\033[1;32m'`
  at_blu=`printf '\033[1;34m'`
  at_std=`printf '\033[m'`
else
  at_red= at_grn= at_lgn= at_blu= at_std=
fi

# Help message.
if $at_help_p; then
  cat <<_ATEOF || at_write_fail=1
Usage: $0 [OPTION]... [VARIABLE=VALUE]... [TESTS]

Run all the tests, or the selected TESTS, given by numeric ranges, and
save a detailed log file.  Upon failure, create debugging scripts.

Do not change environment variables directly.  Instead, set them via
command line arguments.  Set \`AUTOTEST_PATH' to select the executables
to exercise.  Each relative directory is expanded as build and source
directories relative to the top level of this distribution.
E.g., from within the build directory /tmp/foo-1.0, invoking this:

  $ $0 AUTOTEST_PATH=bin

is equivalent to the following, assuming the source directory is /src/foo-1.0:

  PATH=/tmp/foo-1.0/bin:/src/foo-1.0/bin:\$PATH $0
_ATEOF
cat <<_ATEOF || at_write_fail=1

Operation modes:
  -h, --help     print the help message, then exit
  -V, --version  print version number, then exit
  -c, --clean    remove all the files this test suite might create and exit
  -l, --list     describes all the tests, or the selected TESTS
_ATEOF
cat <<_ATEOF || at_write_fail=1

Execution tuning:
  -C, --directory=DIR
                 change to directory DIR before starting
      --color[=never|auto|always]
                 enable colored test results on terminal, or always
  -j, --jobs[=N]
                 Allow N jobs at once; infinite jobs with no arg (default 1)
  -k, --keywords=KEYWORDS
                 select the tests matching all the comma-separated KEYWORDS
                 multiple \`-k' accumulate; prefixed \`!' negates a KEYWORD
      --recheck  select all tests that failed or passed unexpectedly last time
  -e, --errexit  abort as soon as a test fails; implies --debug
  -v, --verbose  force more detailed output
                 default for debugging scripts
  -d, --debug    inhibit clean up and top-level logging
                 default for debugging scripts
  -x, --trace    enable tests shell tracing
_ATEOF
cat <<_ATEOF || at_write_fail=1

Report bugs to <ws-opensource-cobol-contact@osscons.jp>.
_ATEOF
  exit $at_write_fail
fi

# List of tests.
if $at_list_p; then
  cat <<_ATEOF || at_write_fail=1
opensource COBOL 4j 1.0.3-unstable test suite: JP products compatibility test groups:

 NUM: FILE-NAME:LINE     TEST-GROUP-NAME
      KEYWORDS

_ATEOF
  # Pass an empty line as separator between selected groups and help.
  $as_echo "$at_groups$as_nl$as_nl$at_help_all" |
    awk 'NF == 1 && FS != ";" {
	   selected[$ 1] = 1
	   next
	 }
	 /^$/ { FS = ";" }
	 NF > 0 {
	   if (selected[$ 1]) {
	     printf " %3d: %-18s %s\n", $ 1, $ 2, $ 3
	     if ($ 4) {
	       lmax = 79
	       indent = "     "
	       line = indent
	       len = length (line)
	       n = split ($ 4, a, " ")
	       for (i = 1; i <= n; i++) {
		 l = length (a[i]) + 1
		 if (i > 1 && len + l > lmax) {
		   print line
		   line = indent " " a[i]
		   len = length (line)
		 } else {
		   line = line " " a[i]
		   len += l
		 }
	       }
	       if (n)
		 print line
	     }
	   }
	 }' || at_write_fail=1
  exit $at_write_fail
fi
if $at_version_p; then
  $as_echo "$as_me (opensource COBOL 4j 1.0.3-unstable)" &&
  cat <<\_ATEOF || at_write_fail=1

Copyright (C) 2012 Free Software Foundation, Inc.
This test suite is free software; the Free Software Foundation gives
unlimited permission to copy, distribute and modify it.
_ATEOF
  exit $at_write_fail
fi

# Should we print banners?  Yes if more than one test is run.
case $at_groups in #(
  *$as_nl* )
      at_print_banners=: ;; #(
  * ) at_print_banners=false ;;
esac
# Text for banner N, set to a single space once printed.

# Take any -C into account.
if $at_change_dir ; then
  test x != "x$at_dir" && cd "$at_dir" \
    || as_fn_error $? "unable to change directory"
  at_dir=`pwd`
fi

# Load the config files for any default variable assignments.
for at_file in atconfig atlocal
do
  test -r $at_file || continue
  . ./$at_file || as_fn_error $? "invalid content: $at_file"
done

# Autoconf <=2.59b set at_top_builddir instead of at_top_build_prefix:
: "${at_top_build_prefix=$at_top_builddir}"

# Perform any assignments requested during argument parsing.
eval "$at_debug_args"

# atconfig delivers names relative to the directory the test suite is
# in, but the groups themselves are run in testsuite-dir/group-dir.
if test -n "$at_top_srcdir"; then
  builddir=../..
  for at_dir_var in srcdir top_srcdir top_build_prefix
  do
    eval at_val=\$at_$at_dir_var
    case $at_val in
      [\\/$]* | ?:[\\/]* ) at_prefix= ;;
      *) at_prefix=../../ ;;
    esac
    eval "$at_dir_var=\$at_prefix\$at_val"
  done
fi

## -------------------- ##
## Directory structure. ##
## -------------------- ##

# This is the set of directories and files used by this script
# (non-literals are capitalized):
#
# TESTSUITE         - the testsuite
# TESTSUITE.log     - summarizes the complete testsuite run
# TESTSUITE.dir/    - created during a run, remains after -d or failed test
# + at-groups/      - during a run: status of all groups in run
# | + NNN/          - during a run: meta-data about test group NNN
# | | + check-line  - location (source file and line) of current AT_CHECK
# | | + status      - exit status of current AT_CHECK
# | | + stdout      - stdout of current AT_CHECK
# | | + stder1      - stderr, including trace
# | | + stderr      - stderr, with trace filtered out
# | | + test-source - portion of testsuite that defines group
# | | + times       - timestamps for computing duration
# | | + pass        - created if group passed
# | | + xpass       - created if group xpassed
# | | + fail        - created if group failed
# | | + xfail       - created if group xfailed
# | | + skip        - created if group skipped
# + at-stop         - during a run: end the run if this file exists
# + at-source-lines - during a run: cache of TESTSUITE line numbers for extraction
# + 0..NNN/         - created for each group NNN, remains after -d or failed test
# | + TESTSUITE.log - summarizes the group results
# | + ...           - files created during the group

# The directory the whole suite works in.
# Should be absolute to let the user `cd' at will.
at_suite_dir=$at_dir/$as_me.dir
# The file containing the suite ($at_dir might have changed since earlier).
at_suite_log=$at_dir/$as_me.log
# The directory containing helper files per test group.
at_helper_dir=$at_suite_dir/at-groups
# Stop file: if it exists, do not start new jobs.
at_stop_file=$at_suite_dir/at-stop
# The fifo used for the job dispatcher.
at_job_fifo=$at_suite_dir/at-job-fifo

if $at_clean; then
  test -d "$at_suite_dir" &&
    find "$at_suite_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
  rm -f -r "$at_suite_dir" "$at_suite_log"
  exit $?
fi

# Don't take risks: use only absolute directories in PATH.
#
# For stand-alone test suites (ie. atconfig was not found),
# AUTOTEST_PATH is relative to `.'.
#
# For embedded test suites, AUTOTEST_PATH is relative to the top level
# of the package.  Then expand it into build/src parts, since users
# may create executables in both places.
AUTOTEST_PATH=`$as_echo "$AUTOTEST_PATH" | sed "s|:|$PATH_SEPARATOR|g"`
at_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $AUTOTEST_PATH $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -n "$at_path" && as_fn_append at_path $PATH_SEPARATOR
case $as_dir in
  [\\/]* | ?:[\\/]* )
    as_fn_append at_path "$as_dir"
    ;;
  * )
    if test -z "$at_top_build_prefix"; then
      # Stand-alone test suite.
      as_fn_append at_path "$as_dir"
    else
      # Embedded test suite.
      as_fn_append at_path "$at_top_build_prefix$as_dir$PATH_SEPARATOR"
      as_fn_append at_path "$at_top_srcdir/$as_dir"
    fi
    ;;
esac
  done
IFS=$as_save_IFS


# Now build and simplify PATH.
#
# There might be directories that don't exist, but don't redirect
# builtins' (eg., cd) stderr directly: Ultrix's sh hates that.
at_new_path=
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $at_path
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -d "$as_dir" || continue
case $as_dir in
  [\\/]* | ?:[\\/]* ) ;;
  * ) as_dir=`(cd "$as_dir" && pwd) 2>/dev/null` ;;
esac
case $PATH_SEPARATOR$at_new_path$PATH_SEPARATOR in
  *$PATH_SEPARATOR$as_dir$PATH_SEPARATOR*) ;;
  $PATH_SEPARATOR$PATH_SEPARATOR) at_new_path=$as_dir ;;
  *) as_fn_append at_new_path "$PATH_SEPARATOR$as_dir" ;;
esac
  done
IFS=$as_save_IFS

PATH=$at_new_path
export PATH

# Setting up the FDs.



# 5 is the log file.  Not to be overwritten if `-d'.
if $at_debug_p; then
  at_suite_log=/dev/null
else
  : >"$at_suite_log"
fi
exec 5>>"$at_suite_log"

# Banners and logs.
$as_echo "## ------------------------------------------------------------------------- ##
## opensource COBOL 4j 1.0.3-unstable test suite: JP products compatibility. ##
## ------------------------------------------------------------------------- ##"
{
  $as_echo "## ------------------------------------------------------------------------- ##
## opensource COBOL 4j 1.0.3-unstable test suite: JP products compatibility. ##
## ------------------------------------------------------------------------- ##"
  echo

  $as_echo "$as_me: command line was:"
  $as_echo "  \$ $0 $at_cli_args"
  echo

  # If ChangeLog exists, list a few lines in case it might help determining
  # the exact version.
  if test -n "$at_top_srcdir" && test -f "$at_top_srcdir/ChangeLog"; then
    $as_echo "## ---------- ##
## ChangeLog. ##
## ---------- ##"
    echo
    sed 's/^/| /;10q' "$at_top_srcdir/ChangeLog"
    echo
  fi

  {
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

}
  echo

  # Contents of the config files.
  for at_file in atconfig atlocal
  do
    test -r $at_file || continue
    $as_echo "$as_me: $at_file:"
    sed 's/^/| /' $at_file
    echo
  done
} >&5


## ------------------------- ##
## Autotest shell functions. ##
## ------------------------- ##

# at_fn_banner NUMBER
# -------------------
# Output banner NUMBER, provided the testsuite is running multiple groups and
# this particular banner has not yet been printed.
at_fn_banner ()
{
  $at_print_banners || return 0
  eval at_banner_text=\$at_banner_text_$1
  test "x$at_banner_text" = "x " && return 0
  eval "at_banner_text_$1=\" \""
  if test -z "$at_banner_text"; then
    $at_first || echo
  else
    $as_echo "$as_nl$at_banner_text$as_nl"
  fi
} # at_fn_banner

# at_fn_check_prepare_notrace REASON LINE
# ---------------------------------------
# Perform AT_CHECK preparations for the command at LINE for an untraceable
# command; REASON is the reason for disabling tracing.
at_fn_check_prepare_notrace ()
{
  $at_trace_echo "Not enabling shell tracing (command contains $1)"
  $as_echo "$2" >"$at_check_line_file"
  at_check_trace=: at_check_filter=:
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_trace LINE
# ------------------------------
# Perform AT_CHECK preparations for the command at LINE for a traceable
# command.
at_fn_check_prepare_trace ()
{
  $as_echo "$1" >"$at_check_line_file"
  at_check_trace=$at_traceon at_check_filter=$at_check_filter_trace
  : >"$at_stdout"; : >"$at_stderr"
}

# at_fn_check_prepare_dynamic COMMAND LINE
# ----------------------------------------
# Decide if COMMAND at LINE is traceable at runtime, and call the appropriate
# preparation function.
at_fn_check_prepare_dynamic ()
{
  case $1 in
    *$as_nl*)
      at_fn_check_prepare_notrace 'an embedded newline' "$2" ;;
    *)
      at_fn_check_prepare_trace "$2" ;;
  esac
}

# at_fn_filter_trace
# ------------------
# Remove the lines in the file "$at_stderr" generated by "set -x" and print
# them to stderr.
at_fn_filter_trace ()
{
  mv "$at_stderr" "$at_stder1"
  grep '^ *+' "$at_stder1" >&2
  grep -v '^ *+' "$at_stder1" >"$at_stderr"
}

# at_fn_log_failure FILE-LIST
# ---------------------------
# Copy the files in the list on stdout with a "> " prefix, and exit the shell
# with a failure exit code.
at_fn_log_failure ()
{
  for file
    do $as_echo "$file:"; sed 's/^/> /' "$file"; done
  echo 1 > "$at_status_file"
  exit 1
}

# at_fn_check_skip EXIT-CODE LINE
# -------------------------------
# Check whether EXIT-CODE is a special exit code (77 or 99), and if so exit
# the test group subshell with that same exit code. Use LINE in any report
# about test failure.
at_fn_check_skip ()
{
  case $1 in
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$2: hard failure"; exit 99;;
    77) echo 77 > "$at_status_file"; exit 77;;
  esac
}

# at_fn_check_status EXPECTED EXIT-CODE LINE
# ------------------------------------------
# Check whether EXIT-CODE is the EXPECTED exit code, and if so do nothing.
# Otherwise, if it is 77 or 99, exit the test group subshell with that same
# exit code; if it is anything else print an error message referring to LINE,
# and fail the test.
at_fn_check_status ()
{
  case $2 in
    $1 ) ;;
    77) echo 77 > "$at_status_file"; exit 77;;
    99) echo 99 > "$at_status_file"; at_failed=:
	$as_echo "$3: hard failure"; exit 99;;
    *) $as_echo "$3: exit code was $2, expected $1"
      at_failed=:;;
  esac
}

# at_fn_diff_devnull FILE
# -----------------------
# Emit a diff between /dev/null and FILE. Uses "test -s" to avoid useless diff
# invocations.
at_fn_diff_devnull ()
{
  test -s "$1" || return 0
  $at_diff "$at_devnull" "$1"
}

# at_fn_test NUMBER
# -----------------
# Parse out test NUMBER from the tail of this file.
at_fn_test ()
{
  eval at_sed=\$at_sed$1
  sed "$at_sed" "$at_myself" > "$at_test_source"
}

# at_fn_create_debugging_script
# -----------------------------
# Create the debugging script $at_group_dir/run which will reproduce the
# current test group.
at_fn_create_debugging_script ()
{
  {
    echo "#! /bin/sh" &&
    echo 'test "${ZSH_VERSION+set}" = set && alias -g '\''${1+"$@"}'\''='\''"$@"'\''' &&
    $as_echo "cd '$at_dir'" &&
    $as_echo "exec \${CONFIG_SHELL-$SHELL} \"$at_myself\" -v -d $at_debug_args $at_group \${1+\"\$@\"}" &&
    echo 'exit 1'
  } >"$at_group_dir/run" &&
  chmod +x "$at_group_dir/run"
}

## -------------------------------- ##
## End of autotest shell functions. ##
## -------------------------------- ##
{
  $as_echo "## ---------------- ##
## Tested programs. ##
## ---------------- ##"
  echo
} >&5

# Report what programs are being tested.
for at_program in : $at_tested
do
  test "$at_program" = : && continue
  case $at_program in
    [\\/]* | ?:[\\/]* ) $at_program_=$at_program ;;
    * )
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -f "$as_dir/$at_program" && break
  done
IFS=$as_save_IFS

    at_program_=$as_dir/$at_program ;;
  esac
  if test -f "$at_program_"; then
    {
      $as_echo "$at_srcdir/jp-compat.at:21: $at_program_ --version"
      "$at_program_" --version </dev/null
      echo
    } >&5 2>&1
  else
    as_fn_error $? "cannot find $at_program" "$LINENO" 5
  fi
done

{
  $as_echo "## ------------------ ##
## Running the tests. ##
## ------------------ ##"
} >&5

at_start_date=`date`
at_start_time=`date +%s 2>/dev/null`
$as_echo "$as_me: starting at: $at_start_date" >&5

# Create the master directory if it doesn't already exist.
as_dir="$at_suite_dir"; as_fn_mkdir_p ||
  as_fn_error $? "cannot create \`$at_suite_dir'" "$LINENO" 5

# Can we diff with `/dev/null'?  DU 5.0 refuses.
if diff /dev/null /dev/null >/dev/null 2>&1; then
  at_devnull=/dev/null
else
  at_devnull=$at_suite_dir/devnull
  >"$at_devnull"
fi

# Use `diff -u' when possible.
if at_diff=`diff -u "$at_devnull" "$at_devnull" 2>&1` && test -z "$at_diff"
then
  at_diff='diff -u'
else
  at_diff=diff
fi

# Get the last needed group.
for at_group in : $at_groups; do :; done

# Extract the start and end lines of each test group at the tail
# of this file
awk '
BEGIN { FS="" }
/^#AT_START_/ {
  start = NR
}
/^#AT_STOP_/ {
  test = substr ($ 0, 10)
  print "at_sed" test "=\"1," start "d;" (NR-1) "q\""
  if (test == "'"$at_group"'") exit
}' "$at_myself" > "$at_suite_dir/at-source-lines" &&
. "$at_suite_dir/at-source-lines" ||
  as_fn_error $? "cannot create test line number cache" "$LINENO" 5
rm -f "$at_suite_dir/at-source-lines"

# Set number of jobs for `-j'; avoid more jobs than test groups.
set X $at_groups; shift; at_max_jobs=$#
if test $at_max_jobs -eq 0; then
  at_jobs=1
fi
if test $at_jobs -ne 1 &&
   { test $at_jobs -eq 0 || test $at_jobs -gt $at_max_jobs; }; then
  at_jobs=$at_max_jobs
fi

# If parallel mode, don't output banners, don't split summary lines.
if test $at_jobs -ne 1; then
  at_print_banners=false
  at_quiet=:
fi

# Set up helper dirs.
rm -rf "$at_helper_dir" &&
mkdir "$at_helper_dir" &&
cd "$at_helper_dir" &&
{ test -z "$at_groups" || mkdir $at_groups; } ||
as_fn_error $? "testsuite directory setup failed" "$LINENO" 5

# Functions for running a test group.  We leave the actual
# test group execution outside of a shell function in order
# to avoid hitting zsh 4.x exit status bugs.

# at_fn_group_prepare
# -------------------
# Prepare for running a test group.
at_fn_group_prepare ()
{
  # The directory for additional per-group helper files.
  at_job_dir=$at_helper_dir/$at_group
  # The file containing the location of the last AT_CHECK.
  at_check_line_file=$at_job_dir/check-line
  # The file containing the exit status of the last command.
  at_status_file=$at_job_dir/status
  # The files containing the output of the tested commands.
  at_stdout=$at_job_dir/stdout
  at_stder1=$at_job_dir/stder1
  at_stderr=$at_job_dir/stderr
  # The file containing the code for a test group.
  at_test_source=$at_job_dir/test-source
  # The file containing dates.
  at_times_file=$at_job_dir/times

  # Be sure to come back to the top test directory.
  cd "$at_suite_dir"

  # Clearly separate the test groups when verbose.
  $at_first || $at_verbose echo

  at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'


  # Create a fresh directory for the next test group, and enter.
  # If one already exists, the user may have invoked ./run from
  # within that directory; we remove the contents, but not the
  # directory itself, so that we aren't pulling the rug out from
  # under the shell's notion of the current directory.
  at_group_dir=$at_suite_dir/$at_group_normalized
  at_group_log=$at_group_dir/$as_me.log
  if test -d "$at_group_dir"; then
  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx {} \;
  rm -fr "$at_group_dir"/* "$at_group_dir"/.[!.] "$at_group_dir"/.??*
fi ||
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: test directory for $at_group_normalized could not be cleaned" >&5
$as_echo "$as_me: WARNING: test directory for $at_group_normalized could not be cleaned" >&2;}
  # Be tolerant if the above `rm' was not able to remove the directory.
  as_dir="$at_group_dir"; as_fn_mkdir_p

  echo 0 > "$at_status_file"

  # In verbose mode, append to the log file *and* show on
  # the standard output; in quiet mode only write to the log.
  if test -z "$at_verbose"; then
    at_tee_pipe='tee -a "$at_group_log"'
  else
    at_tee_pipe='cat >> "$at_group_log"'
  fi
}

# at_fn_group_banner ORDINAL LINE DESC PAD [BANNER]
# -------------------------------------------------
# Declare the test group ORDINAL, located at LINE with group description DESC,
# and residing under BANNER. Use PAD to align the status column.
at_fn_group_banner ()
{
  at_setup_line="$2"
  test -n "$5" && at_fn_banner $5
  at_desc="$3"
  case $1 in
    [0-9])      at_desc_line="  $1: ";;
    [0-9][0-9]) at_desc_line=" $1: " ;;
    *)          at_desc_line="$1: "  ;;
  esac
  as_fn_append at_desc_line "$3$4"
  $at_quiet $as_echo_n "$at_desc_line"
  echo "#                             -*- compilation -*-" >> "$at_group_log"
}

# at_fn_group_postprocess
# -----------------------
# Perform cleanup after running a test group.
at_fn_group_postprocess ()
{
  # Be sure to come back to the suite directory, in particular
  # since below we might `rm' the group directory we are in currently.
  cd "$at_suite_dir"

  if test ! -f "$at_check_line_file"; then
    sed "s/^ */$as_me: WARNING: /" <<_ATEOF
      A failure happened in a test group before any test could be
      run. This means that test suite is improperly designed.  Please
      report this failure to <ws-opensource-cobol-contact@osscons.jp>.
_ATEOF
    $as_echo "$at_setup_line" >"$at_check_line_file"
    at_status=99
  fi
  $at_verbose $as_echo_n "$at_group. $at_setup_line: "
  $as_echo_n "$at_group. $at_setup_line: " >> "$at_group_log"
  case $at_xfail:$at_status in
    yes:0)
	at_msg="UNEXPECTED PASS"
	at_res=xpass
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    no:0)
	at_msg="ok"
	at_res=pass
	at_errexit=false
	at_color=$at_grn
	;;
    *:77)
	at_msg='skipped ('`cat "$at_check_line_file"`')'
	at_res=skip
	at_errexit=false
	at_color=$at_blu
	;;
    no:* | *:99)
	at_msg='FAILED ('`cat "$at_check_line_file"`')'
	at_res=fail
	at_errexit=$at_errexit_p
	at_color=$at_red
	;;
    yes:*)
	at_msg='expected failure ('`cat "$at_check_line_file"`')'
	at_res=xfail
	at_errexit=false
	at_color=$at_lgn
	;;
  esac
  echo "$at_res" > "$at_job_dir/$at_res"
  # In parallel mode, output the summary line only afterwards.
  if test $at_jobs -ne 1 && test -n "$at_verbose"; then
    $as_echo "$at_desc_line $at_color$at_msg$at_std"
  else
    # Make sure there is a separator even with long titles.
    $as_echo " $at_color$at_msg$at_std"
  fi
  at_log_msg="$at_group. $at_desc ($at_setup_line): $at_msg"
  case $at_status in
    0|77)
      # $at_times_file is only available if the group succeeded.
      # We're not including the group log, so the success message
      # is written in the global log separately.  But we also
      # write to the group log in case they're using -d.
      if test -f "$at_times_file"; then
	at_log_msg="$at_log_msg     ("`sed 1d "$at_times_file"`')'
	rm -f "$at_times_file"
      fi
      $as_echo "$at_log_msg" >> "$at_group_log"
      $as_echo "$at_log_msg" >&5

      # Cleanup the group directory, unless the user wants the files
      # or the success was unexpected.
      if $at_debug_p || test $at_res = xpass; then
	at_fn_create_debugging_script
	if test $at_res = xpass && $at_errexit; then
	  echo stop > "$at_stop_file"
	fi
      else
	if test -d "$at_group_dir"; then
	  find "$at_group_dir" -type d ! -perm -700 -exec chmod u+rwx \{\} \;
	  rm -fr "$at_group_dir"
	fi
	rm -f "$at_test_source"
      fi
      ;;
    *)
      # Upon failure, include the log into the testsuite's global
      # log.  The failure message is written in the group log.  It
      # is later included in the global log.
      $as_echo "$at_log_msg" >> "$at_group_log"

      # Upon failure, keep the group directory for autopsy, and create
      # the debugging script.  With -e, do not start any further tests.
      at_fn_create_debugging_script
      if $at_errexit; then
	echo stop > "$at_stop_file"
      fi
      ;;
  esac
}


## ------------ ##
## Driver loop. ##
## ------------ ##


if (set -m && set +m && set +b) >/dev/null 2>&1; then
  set +b
  at_job_control_on='set -m' at_job_control_off='set +m' at_job_group=-
else
  at_job_control_on=: at_job_control_off=: at_job_group=
fi

for at_signal in 1 2 15; do
  trap 'set +x; set +e
	$at_job_control_off
	at_signal='"$at_signal"'
	echo stop > "$at_stop_file"
	trap "" $at_signal
	at_pgids=
	for at_pgid in `jobs -p 2>/dev/null`; do
	  at_pgids="$at_pgids $at_job_group$at_pgid"
	done
	test -z "$at_pgids" || kill -$at_signal $at_pgids 2>/dev/null
	wait
	if test "$at_jobs" -eq 1 || test -z "$at_verbose"; then
	  echo >&2
	fi
	at_signame=`kill -l $at_signal 2>&1 || echo $at_signal`
	set x $at_signame
	test 1 -gt 2 && at_signame=$at_signal
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: caught signal $at_signame, bailing out" >&5
$as_echo "$as_me: WARNING: caught signal $at_signame, bailing out" >&2;}
	as_fn_arith 128 + $at_signal && exit_status=$as_val
	as_fn_exit $exit_status' $at_signal
done

rm -f "$at_stop_file"
at_first=:

if test $at_jobs -ne 1 &&
     rm -f "$at_job_fifo" &&
     test -n "$at_job_group" &&
     ( mkfifo "$at_job_fifo" && trap 'exit 1' PIPE STOP TSTP ) 2>/dev/null
then
  # FIFO job dispatcher.

  trap 'at_pids=
	for at_pid in `jobs -p`; do
	  at_pids="$at_pids $at_job_group$at_pid"
	done
	if test -n "$at_pids"; then
	  at_sig=TSTP
	  test "${TMOUT+set}" = set && at_sig=STOP
	  kill -$at_sig $at_pids 2>/dev/null
	fi
	kill -STOP $$
	test -z "$at_pids" || kill -CONT $at_pids 2>/dev/null' TSTP

  echo
  # Turn jobs into a list of numbers, starting from 1.
  at_joblist=`$as_echo "$at_groups" | sed -n 1,${at_jobs}p`

  set X $at_joblist
  shift
  for at_group in $at_groups; do
    $at_job_control_on 2>/dev/null
    (
      # Start one test group.
      $at_job_control_off
      if $at_first; then
	exec 7>"$at_job_fifo"
      else
	exec 6<&-
      fi
      trap 'set +x; set +e
	    trap "" PIPE
	    echo stop > "$at_stop_file"
	    echo >&7
	    as_fn_exit 141' PIPE
      at_fn_group_prepare
      if cd "$at_group_dir" &&
	 at_fn_test $at_group &&
	 . "$at_test_source"
      then :; else
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
	at_failed=:
      fi
      at_fn_group_postprocess
      echo >&7
    ) &
    $at_job_control_off
    if $at_first; then
      at_first=false
      exec 6<"$at_job_fifo" 7>"$at_job_fifo"
    fi
    shift # Consume one token.
    if test $# -gt 0; then :; else
      read at_token <&6 || break
      set x $*
    fi
    test -f "$at_stop_file" && break
  done
  exec 7>&-
  # Read back the remaining ($at_jobs - 1) tokens.
  set X $at_joblist
  shift
  if test $# -gt 0; then
    shift
    for at_job
    do
      read at_token
    done <&6
  fi
  exec 6<&-
  wait
else
  # Run serially, avoid forks and other potential surprises.
  for at_group in $at_groups; do
    at_fn_group_prepare
    if cd "$at_group_dir" &&
       at_fn_test $at_group &&
       . "$at_test_source"; then :; else
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unable to parse test group: $at_group" >&5
$as_echo "$as_me: WARNING: unable to parse test group: $at_group" >&2;}
      at_failed=:
    fi
    at_fn_group_postprocess
    test -f "$at_stop_file" && break
    at_first=false
  done
fi

# Wrap up the test suite with summary statistics.
cd "$at_helper_dir"

# Use ?..???? when the list must remain sorted, the faster * otherwise.
at_pass_list=`for f in */pass; do echo $f; done | sed '/\*/d; s,/pass,,'`
at_skip_list=`for f in */skip; do echo $f; done | sed '/\*/d; s,/skip,,'`
at_xfail_list=`for f in */xfail; do echo $f; done | sed '/\*/d; s,/xfail,,'`
at_xpass_list=`for f in ?/xpass ??/xpass ???/xpass ????/xpass; do
		 echo $f; done | sed '/?/d; s,/xpass,,'`
at_fail_list=`for f in ?/fail ??/fail ???/fail ????/fail; do
		echo $f; done | sed '/?/d; s,/fail,,'`

set X $at_pass_list $at_xpass_list $at_xfail_list $at_fail_list $at_skip_list
shift; at_group_count=$#
set X $at_xpass_list; shift; at_xpass_count=$#; at_xpass_list=$*
set X $at_xfail_list; shift; at_xfail_count=$#
set X $at_fail_list; shift; at_fail_count=$#; at_fail_list=$*
set X $at_skip_list; shift; at_skip_count=$#

as_fn_arith $at_group_count - $at_skip_count && at_run_count=$as_val
as_fn_arith $at_xpass_count + $at_fail_count && at_unexpected_count=$as_val
as_fn_arith $at_xfail_count + $at_fail_count && at_total_fail_count=$as_val

# Back to the top directory.
cd "$at_dir"
rm -rf "$at_helper_dir"

# Compute the duration of the suite.
at_stop_date=`date`
at_stop_time=`date +%s 2>/dev/null`
$as_echo "$as_me: ending at: $at_stop_date" >&5
case $at_start_time,$at_stop_time in
  [0-9]*,[0-9]*)
    as_fn_arith $at_stop_time - $at_start_time && at_duration_s=$as_val
    as_fn_arith $at_duration_s / 60 && at_duration_m=$as_val
    as_fn_arith $at_duration_m / 60 && at_duration_h=$as_val
    as_fn_arith $at_duration_s % 60 && at_duration_s=$as_val
    as_fn_arith $at_duration_m % 60 && at_duration_m=$as_val
    at_duration="${at_duration_h}h ${at_duration_m}m ${at_duration_s}s"
    $as_echo "$as_me: test suite duration: $at_duration" >&5
    ;;
esac

echo
$as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
echo
{
  echo
  $as_echo "## ------------- ##
## Test results. ##
## ------------- ##"
  echo
} >&5

if test $at_run_count = 1; then
  at_result="1 test"
  at_were=was
else
  at_result="$at_run_count tests"
  at_were=were
fi
if $at_errexit_p && test $at_unexpected_count != 0; then
  if test $at_xpass_count = 1; then
    at_result="$at_result $at_were run, one passed"
  else
    at_result="$at_result $at_were run, one failed"
  fi
  at_result="$at_result unexpectedly and inhibited subsequent tests."
  at_color=$at_red
else
  # Don't you just love exponential explosion of the number of cases?
  at_color=$at_red
  case $at_xpass_count:$at_fail_count:$at_xfail_count in
    # So far, so good.
    0:0:0) at_result="$at_result $at_were successful." at_color=$at_grn ;;
    0:0:*) at_result="$at_result behaved as expected." at_color=$at_lgn ;;

    # Some unexpected failures
    0:*:0) at_result="$at_result $at_were run,
$at_fail_count failed unexpectedly." ;;

    # Some failures, both expected and unexpected
    0:*:1) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    0:*:*) at_result="$at_result $at_were run,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;

    # No unexpected failures, but some xpasses
    *:0:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly." ;;

    # No expected failures, but failures and xpasses
    *:1:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failure)." ;;
    *:*:0) at_result="$at_result $at_were run,
$at_unexpected_count did not behave as expected ($at_fail_count unexpected failures)." ;;

    # All of them.
    *:*:1) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failure)." ;;
    *:*:*) at_result="$at_result $at_were run,
$at_xpass_count passed unexpectedly,
$at_total_fail_count failed ($at_xfail_count expected failures)." ;;
  esac

  if test $at_skip_count = 0 && test $at_run_count -gt 1; then
    at_result="All $at_result"
  fi
fi

# Now put skips in the mix.
case $at_skip_count in
  0) ;;
  1) at_result="$at_result
1 test was skipped." ;;
  *) at_result="$at_result
$at_skip_count tests were skipped." ;;
esac

if test $at_unexpected_count = 0; then
  echo "$at_color$at_result$at_std"
  echo "$at_result" >&5
else
  echo "${at_color}ERROR: $at_result$at_std" >&2
  echo "ERROR: $at_result" >&5
  {
    echo
    $as_echo "## ------------------------ ##
## Summary of the failures. ##
## ------------------------ ##"

    # Summary of failed and skipped tests.
    if test $at_fail_count != 0; then
      echo "Failed tests:"
      $SHELL "$at_myself" $at_fail_list --list
      echo
    fi
    if test $at_skip_count != 0; then
      echo "Skipped tests:"
      $SHELL "$at_myself" $at_skip_list --list
      echo
    fi
    if test $at_xpass_count != 0; then
      echo "Unexpected passes:"
      $SHELL "$at_myself" $at_xpass_list --list
      echo
    fi
    if test $at_fail_count != 0; then
      $as_echo "## ---------------------- ##
## Detailed failed tests. ##
## ---------------------- ##"
      echo
      for at_group in $at_fail_list
      do
	at_group_normalized=$at_group

  eval 'while :; do
    case $at_group_normalized in #(
    '"$at_format"'*) break;;
    esac
    at_group_normalized=0$at_group_normalized
  done'

	cat "$at_suite_dir/$at_group_normalized/$as_me.log"
	echo
      done
      echo
    fi
    if test -n "$at_top_srcdir"; then
      sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## ${at_top_build_prefix}config.log ##
_ASBOX
      sed 's/^/| /' ${at_top_build_prefix}config.log
      echo
    fi
  } >&5

  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## $as_me.log was created. ##
_ASBOX

  echo
  if $at_debug_p; then
    at_msg='per-test log files'
  else
    at_msg="\`${at_testdir+${at_testdir}/}$as_me.log'"
  fi
  $as_echo "Please send $at_msg and all information you think might help:

   To: <ws-opensource-cobol-contact@osscons.jp>
   Subject: [opensource COBOL 4j 1.0.3-unstable] $as_me: $at_fail_list${at_fail_list:+ failed${at_xpass_list:+, }}$at_xpass_list${at_xpass_list:+ passed unexpectedly}

You may investigate any problem if you feel able to do so, in which
case the test suite provides a good starting point.  Its output may
be found below \`${at_testdir+${at_testdir}/}$as_me.dir'.
"
  exit 1
fi

exit 0

## ------------- ##
## Actual tests. ##
## ------------- ##
#AT_START_1
at_fn_group_banner 1 'split-keys.at:1' \
  "SPLIT KEYS (ALTERNATE KEY)" "                     "
at_xfail=no
(
  $as_echo "1. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/split-keys.at:3: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"yes\" || exit 77" "split-keys.at:3"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "yes" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:3"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  RANDOM
                        RECORD KEY   IS  TEST-KEY1
                        ALTERNATE RECORD KEY IS ALT-KEY1
                                                ALT-KEY2.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 ALT-KEY1   PIC X(4).
          03 ALT-KEY2   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "AAAA" TO TEST-KEY1.
           MOVE "ALT1" TO  ALT-KEY1.
           MOVE "-001" TO  ALT-KEY2.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "ALT2" TO  ALT-KEY1.
           MOVE "-002" TO  ALT-KEY2.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "ALT3" TO  ALT-KEY1.
           MOVE "-003" TO  ALT-KEY2.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "ALT2" TO  ALT-KEY1.
           MOVE "-002" TO  ALT-KEY2.
           READ  TEST-FILE KEY IS ALT-KEY1 ALT-KEY2.
           DISPLAY TEST-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/split-keys.at:48: \${COMPILE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "split-keys.at:48"
( $at_check_trace; ${COMPILE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/split-keys.at:49: java prog"
at_fn_check_prepare_trace "split-keys.at:49"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "BBBB" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_1
#AT_START_2
at_fn_group_banner 2 'split-keys.at:53' \
  "SPLIT KEYS (ALTERNATE KEY - NOT YET)" "           "
at_xfail=no
(
  $as_echo "2. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/split-keys.at:55: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"no\" || exit 77" "split-keys.at:55"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "no" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  RANDOM
                        RECORD KEY   IS  TEST-KEY1
                        ALTERNATE RECORD KEY IS ALT-KEY1
                                                ALT-KEY2.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 ALT-KEY1   PIC X(4).
          03 ALT-KEY2   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "AAAA" TO TEST-KEY1.
           MOVE "ALT1" TO  ALT-KEY1.
           MOVE "-001" TO  ALT-KEY2.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "ALT2" TO  ALT-KEY1.
           MOVE "-002" TO  ALT-KEY2.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "ALT3" TO  ALT-KEY1.
           MOVE "-003" TO  ALT-KEY2.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "ALT2" TO  ALT-KEY1.
           MOVE "-002" TO  ALT-KEY2.
           READ  TEST-FILE KEY IS ALT-KEY1 ALT-KEY2.
           DISPLAY TEST-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/split-keys.at:100: \${COMPILE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "split-keys.at:100"
( $at_check_trace; ${COMPILE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:12: Warning: 'SPLIT KEYS' not implemented
prog.cob:38: Warning: 'SPLIT KEYS' not implemented
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:100"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_2
#AT_START_3
at_fn_group_banner 3 'split-keys.at:107' \
  "SPLIT KEYS (RECORD KEY)" "                        "
at_xfail=no
(
  $as_echo "3. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/split-keys.at:109: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"yes\" || exit 77" "split-keys.at:109"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "yes" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:109"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  RANDOM
                        RECORD KEY   IS  TEST-KEY1
                                         TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 ALT-KEY1   PIC X(4).
          03 TEST-KEY2  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0001" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0002" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0003" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0001" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0002" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0003" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "BBBB" TO  TEST-KEY1.
           MOVE "0002" TO  TEST-KEY2.
           READ  TEST-FILE KEY IS TEST-KEY1 TEST-KEY2.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/split-keys.at:166: \${COMPILE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "split-keys.at:166"
( $at_check_trace; ${COMPILE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:166"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/split-keys.at:167: java prog"
at_fn_check_prepare_trace "split-keys.at:167"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ALT2" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_3
#AT_START_4
at_fn_group_banner 4 'split-keys.at:171' \
  "SPLIT KEYS (RECORD KEY - NOT YET)" "              "
at_xfail=no
(
  $as_echo "4. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/split-keys.at:173: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"no\" || exit 77" "split-keys.at:173"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "no" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:173"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  RANDOM
                        RECORD KEY   IS  TEST-KEY1
                                         TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 ALT-KEY1   PIC X(4).
          03 TEST-KEY2  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0001" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0002" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "BBBB" TO TEST-KEY1.
           MOVE "0003" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0001" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0002" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "CCCC" TO TEST-KEY1.
           MOVE "0003" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "BBBB" TO  TEST-KEY1.
           MOVE "0002" TO  TEST-KEY2.
           READ  TEST-FILE KEY IS TEST-KEY1 TEST-KEY2.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/split-keys.at:230: \${COMPILE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "split-keys.at:230"
( $at_check_trace; ${COMPILE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:12: Warning: 'SPLIT KEYS' not implemented
prog.cob:7: Error: RECORD KEY clause is required for file 'TEST-FILE'
prog.cob:50: Warning: 'SPLIT KEYS' not implemented
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/split-keys.at:230"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_4
#AT_START_5
at_fn_group_banner 5 'split-keys.at:238' \
  "SPLIT KEYS (START Syntax - EQUAL)" "              "
at_xfail=no
(
  $as_echo "5. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/split-keys.at:240: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"yes\" || exit 77" "split-keys.at:240"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "yes" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:240"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS EQUAL TO TEST-KEY1 TEST-KEY2.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/split-keys.at:297: \${COMPILE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "split-keys.at:297"
( $at_check_trace; ${COMPILE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:297"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/split-keys.at:298: java prog"
at_fn_check_prepare_trace "split-keys.at:298"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ALT2" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:298"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_5
#AT_START_6
at_fn_group_banner 6 'split-keys.at:302' \
  "SPLIT KEYS (START Syntax - EQUAL - NOT YET)" "    "
at_xfail=no
(
  $as_echo "6. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/split-keys.at:304: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"no\" || exit 77" "split-keys.at:304"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "no" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:304"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS EQUAL TO TEST-KEY1 TEST-KEY2.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/split-keys.at:361: \${COMPILE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "split-keys.at:361"
( $at_check_trace; ${COMPILE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:11: Warning: 'SPLIT KEYS' not implemented
prog.cob:7: Error: RECORD KEY clause is required for file 'TEST-FILE'
prog.cob:49: Warning: 'SPLIT KEYS' not implemented
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/split-keys.at:361"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_6
#AT_START_7
at_fn_group_banner 7 'split-keys.at:369' \
  "SPLIT KEYS (START Syntax - GREATER THAN)" "       "
at_xfail=no
(
  $as_echo "7. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/split-keys.at:371: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"yes\" || exit 77" "split-keys.at:371"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "yes" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:371"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS GREATER THAN TEST-KEY1 TEST-KEY2.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/split-keys.at:428: \${COMPILE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "split-keys.at:428"
( $at_check_trace; ${COMPILE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:428"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/split-keys.at:429: java prog"
at_fn_check_prepare_trace "split-keys.at:429"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ALT3" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:429"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_7
#AT_START_8
at_fn_group_banner 8 'split-keys.at:433' \
  "SPLIT KEYS (START Syntax - GREATER THAN - NOT YET)" ""
at_xfail=no
(
  $as_echo "8. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/split-keys.at:435: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"no\" || exit 77" "split-keys.at:435"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "no" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:435"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS GREATER THAN TEST-KEY1 TEST-KEY2.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/split-keys.at:492: \${COMPILE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "split-keys.at:492"
( $at_check_trace; ${COMPILE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:11: Warning: 'SPLIT KEYS' not implemented
prog.cob:7: Error: RECORD KEY clause is required for file 'TEST-FILE'
prog.cob:49: Warning: 'SPLIT KEYS' not implemented
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/split-keys.at:492"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_8
#AT_START_9
at_fn_group_banner 9 'split-keys.at:500' \
  "SPLIT KEYS (key unmatch)" "                       "
at_xfail=no
(
  $as_echo "9. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/split-keys.at:502: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"yes\" || exit 77" "split-keys.at:502"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "yes" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/split-keys.at:502"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY1 TEST-KEY2
                        ALTERNATE RECORD KEY IS ALT-KEY1.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY1  PIC X(4).
          03 TEST-KEY2  PIC X(4).
          03 ALT-KEY1   PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT1" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT2" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT3" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1000" TO TEST-KEY2.
           MOVE "ALT4" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           MOVE "ALT5" TO  ALT-KEY1.
           WRITE TEST-REC.
           MOVE "0002" TO TEST-KEY1.
           MOVE "1002" TO TEST-KEY2.
           MOVE "ALT6" TO  ALT-KEY1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           OPEN  INPUT  TEST-FILE.
           MOVE "0001" TO TEST-KEY1.
           MOVE "1001" TO TEST-KEY2.
           START TEST-FILE KEY IS EQUAL TO  TEST-KEY2 TEST-KEY1.
           READ  TEST-FILE NEXT.
           DISPLAY ALT-KEY1 NO ADVANCING.
           READ  TEST-FILE.
           DISPLAY ALT-KEY1 NO ADVANCING.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/split-keys.at:561: \${COMPILE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "split-keys.at:561"
( $at_check_trace; ${COMPILE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:49: Error: Undefined compound keys
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/split-keys.at:561"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_9
#AT_START_10
at_fn_group_banner 10 'compat-check.at:1' \
  "DIV/MUL ORDER" "                                  "
at_xfail=no
(
  $as_echo "10. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC 99v999.
       PROCEDURE        DIVISION.
           COMPUTE X = 1 / 3 * 5.      *>WARN
           COMPUTE X = 1 * 3 / 5.      *>NO WARN
           COMPUTE X = 9 / 1 / 3 * 5.  *>WARN
           COMPUTE X = 1 / 3 * 5 * 9.  *>WARN
           COMPUTE X = 1 / 3 + 9 * 5.  *>NO WARN
           COMPUTE X = 9 + 1 / 3 * 5.  *>WARN
           COMPUTE X = 1 / 3 * 5 + 9.  *>WARN
           COMPUTE X = 1 / 3 * 5 + 2 / 6 * 10.  *>WARN TWICE
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/compat-check.at:21: \${COMPILE_JP_COMPAT} -Wcompat prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "compat-check.at:21"
( $at_check_trace; ${COMPILE_JP_COMPAT} -Wcompat prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:8: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:10: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:11: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:13: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:14: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:15: Warning: MUL operation after DIV can cause the precision issue.
prog.cob:15: Warning: MUL operation after DIV can cause the precision issue.
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/compat-check.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_10
#AT_START_11
at_fn_group_banner 11 'compat-check.at:33' \
  "GO TO escape SECTION" "                           "
at_xfail=no
(
  $as_echo "11. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 TBLS.
         02 TBLA OCCURS 2 TIMES
            ASCENDING KEY IS FK
            INDEXED BY       IX.
            03 FK PIC 9.
            03 FV PIC 9.
       PROCEDURE        DIVISION.
       S-SRC        SECTION.
       S1.
           GO TO S2.
       S2.
           GO TO D1.
           IF 1 = 1 THEN GO TO D2.
           SEARCH ALL TBLA WHEN FK(IX) = 1 GO TO D2.
           CALL "NONE"
             ON EXCEPTION GO TO D1
             NOT ON EXCEPTION GO TO D2.
           PERFORM UNTIL 1 = 1 GO TO D1 END-PERFORM.
       S3.
           GO TO D1.
           GO TO D2.
           NEXT SENTENCE.
       S-DST        SECTION.
       D1.
       D2.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/compat-check.at:68: \${COMPILE_JP_COMPAT} -Wcompat prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "compat-check.at:68"
( $at_check_trace; ${COMPILE_JP_COMPAT} -Wcompat prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob: In paragraph 'S3':
prog.cob:27: Warning: NEXT SENTENCE is archaic in jp-compat
prog.cob: In paragraph 'S2':
prog.cob:17: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:18: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:19: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:21: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:22: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:23: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob: In paragraph 'S3':
prog.cob:25: Warning: GO TO escape from SECTION S-SRC to S-DST
prog.cob:26: Warning: GO TO escape from SECTION S-SRC to S-DST
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/compat-check.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_11
#AT_START_12
at_fn_group_banner 12 'compat-check.at:85' \
  "jp-comat - X Literal" "                           "
at_xfail=no
(
  $as_echo "12. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC X(2) VALUE X'CEB1'.
       PROCEDURE        DIVISION.
           MOVE  X'CEB2' TO X.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/compat-check.at:98: \${COMPILE_JP_COMPAT} -Wcompat prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "compat-check.at:98"
( $at_check_trace; ${COMPILE_JP_COMPAT} -Wcompat prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:6: Warning: X Binary literal found.
prog.cob:8: Warning: X Binary literal found.
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/compat-check.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_12
#AT_START_13
at_fn_group_banner 13 'compat-check.at:105' \
  "jp-compat NX Literal" "                           "
at_xfail=no
(
  $as_echo "13. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 X             PIC N(1) VALUE NX'CEB1'.
       PROCEDURE        DIVISION.
           MOVE  NX'CEB2' TO X.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/compat-check.at:118: \${COMPILE_JP_COMPAT} -Wcompat prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "compat-check.at:118"
( $at_check_trace; ${COMPILE_JP_COMPAT} -Wcompat prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:6: Warning: NX Binary literal found.
prog.cob:8: Warning: NX Binary literal found.
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/compat-check.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_13
#AT_START_14
at_fn_group_banner 14 'copy-leading-trailing.at:1' \
  "COPY REPLACING LEADING" "                         "
at_xfail=no
(
  $as_echo "14. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >copy.inc <<'_ATEOF'

       01 LEADER-VAR-TRAILER PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" REPLACING
           LEADING  ==LEADER==  BY ==I==.
       PROCEDURE        DIVISION.
           DISPLAY I-VAR-TRAILER NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-leading-trailing.at:21: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-leading-trailing.at:21"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-leading-trailing.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-leading-trailing.at:22: java prog"
at_fn_check_prepare_trace "copy-leading-trailing.at:22"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-leading-trailing.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_14
#AT_START_15
at_fn_group_banner 15 'copy-leading-trailing.at:26' \
  "COPY REPLACING TRAILING" "                        "
at_xfail=no
(
  $as_echo "15. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >copy.inc <<'_ATEOF'

       01 LEADER-VAR-TRAILER PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" REPLACING
           TRAILING ==TRAILER== BY ==01==.
       PROCEDURE        DIVISION.
           DISPLAY LEADER-VAR-01 NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-leading-trailing.at:46: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-leading-trailing.at:46"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-leading-trailing.at:46"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-leading-trailing.at:47: java prog"
at_fn_check_prepare_trace "copy-leading-trailing.at:47"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-leading-trailing.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_15
#AT_START_16
at_fn_group_banner 16 'copy-leading-trailing.at:51' \
  "COPY REPLACING LEADING TRAILING" "                "
at_xfail=no
(
  $as_echo "16. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >copy.inc <<'_ATEOF'

       01 LEADER-VAR         PIC X(2) VALUE "OK".
       01 VAR-TRAILER        PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" REPLACING
           LEADING  ==LEADER==  BY ==I==
           TRAILING ==TRAILER== BY ==01==.
       PROCEDURE        DIVISION.
           DISPLAY I-VAR  NO ADVANCING
           END-DISPLAY.
           DISPLAY VAR-01 NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-leading-trailing.at:75: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-leading-trailing.at:75"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-leading-trailing.at:75"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-leading-trailing.at:76: java prog"
at_fn_check_prepare_trace "copy-leading-trailing.at:76"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OKOK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-leading-trailing.at:76"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_16
#AT_START_17
at_fn_group_banner 17 'end-program-wrong.at:1' \
  "Allow wrong pgm-name in END-PROGRAM" "            "
at_xfail=no
(
  $as_echo "17. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       PROCEDURE        DIVISION.
          DISPLAY "OK" WITH NO ADVANCING.
       END PROGRAM      progprog.
_ATEOF


{ set +x
$as_echo "$at_srcdir/end-program-wrong.at:12: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "end-program-wrong.at:12"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/end-program-wrong.at:12"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_17
#AT_START_18
at_fn_group_banner 18 'evaluate-also-missing.at:1' \
  "Allow missing ALSO in EVALUATE-WHEN" "            "
at_xfail=no
(
  $as_echo "18. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       01 B PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
       EVALUATE A B
          WHEN 1 1
             DISPLAY "OK" WITH NO ADVANCING
          WHEN OTHER
             DISPLAY "NG" WITH NO ADVANCING
       END-EVALUATE.
       GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/evaluate-also-missing.at:20: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "evaluate-also-missing.at:20"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/evaluate-also-missing.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/evaluate-also-missing.at:21: java prog"
at_fn_check_prepare_trace "evaluate-also-missing.at:21"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/evaluate-also-missing.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_18
#AT_START_19
at_fn_group_banner 19 'evaluate-also-missing.at:25' \
  "Allow missing both ALSO and class condition IS in EVALUATE" ""
at_xfail=no
(
  $as_echo "19. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
       CLASS C-ALPHA IS "A" THRU "Z".
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 C PIC X VALUE "C".
       PROCEDURE        DIVISION.
       EVALUATE C C-ALPHA
          WHEN TRUE
             DISPLAY "OK" WITH NO ADVANCING
          WHEN OTHER
             DISPLAY "NG" WITH NO ADVANCING
       END-EVALUATE.
       GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/evaluate-also-missing.at:47: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "evaluate-also-missing.at:47"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/evaluate-also-missing.at:47"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/evaluate-also-missing.at:48: java prog"
at_fn_check_prepare_trace "evaluate-also-missing.at:48"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/evaluate-also-missing.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_19
#AT_START_20
at_fn_group_banner 20 'empty-imperative.at:1' \
  "Allow empty EVALUATE-WHEN OTHER" "                "
at_xfail=no
(
  $as_echo "20. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       01 B PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
       EVALUATE A ALSO B
          WHEN 1 ALSO 1
             DISPLAY "OK" WITH NO ADVANCING
          WHEN OTHER
       END-EVALUATE.
       GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/empty-imperative.at:19: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "empty-imperative.at:19"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/empty-imperative.at:20: java prog"
at_fn_check_prepare_trace "empty-imperative.at:20"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_20
#AT_START_21
at_fn_group_banner 21 'empty-imperative.at:24' \
  "Allow empty ELSE" "                               "
at_xfail=no
(
  $as_echo "21. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       01 B PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
       IF A = B THEN
          DISPLAY "OK" WITH NO ADVANCING
       ELSE
       END-IF.
       GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/empty-imperative.at:41: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "empty-imperative.at:41"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/empty-imperative.at:42: java prog"
at_fn_check_prepare_trace "empty-imperative.at:42"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_21
#AT_START_22
at_fn_group_banner 22 'empty-imperative.at:46' \
  "Empty IF by unsupported stmt" "                   "
at_xfail=no
(
  $as_echo "22. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION        DIVISION.
       PROGRAM-ID.           prog.
       DATA                  DIVISION.
       WORKING-STORAGE       SECTION.
       01  X-01              PIC X(10).
       PROCEDURE             DIVISION.
            if X-01 = " "  stop "test".
            GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/empty-imperative.at:59: \${COMPILE_DEFAULT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "empty-imperative.at:59"
( $at_check_trace; ${COMPILE_DEFAULT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/empty-imperative.at:60: java prog"
at_fn_check_prepare_trace "empty-imperative.at:60"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_22
#AT_START_23
at_fn_group_banner 23 'empty-imperative.at:64' \
  "Allow empty EVALUATE- before WHEN OTHER" "        "
at_xfail=no
(
  $as_echo "23. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 0.
       PROCEDURE        DIVISION.
           EVALUATE A
             WHEN 1
               DISPLAY "NG" WITH NO ADVANCING
             WHEN 2
             WHEN OTHER
               DISPLAY "OK" WITH NO ADVANCING
           END-EVALUATE.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/empty-imperative.at:83: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "empty-imperative.at:83"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/empty-imperative.at:84: java prog"
at_fn_check_prepare_trace "empty-imperative.at:84"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_23
#AT_START_24
at_fn_group_banner 24 'empty-imperative.at:88' \
  "Allow empty EVALUATE- semantics" "                "
at_xfail=no
(
  $as_echo "24. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
           EVALUATE A
             WHEN 1
             WHEN 2
             WHEN OTHER
               DISPLAY "OK" WITH NO ADVANCING
           END-EVALUATE.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/empty-imperative.at:106: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "empty-imperative.at:106"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/empty-imperative.at:107: java prog"
at_fn_check_prepare_trace "empty-imperative.at:107"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:107"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_24
#AT_START_25
at_fn_group_banner 25 'empty-imperative.at:111' \
  "Allow empty EVALUATE- semantics 2" "              "
at_xfail=no
(
  $as_echo "25. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 1.
       PROCEDURE        DIVISION.
           EVALUATE A
             WHEN 0
               DISPLAY "NG" WITH NO ADVANCING
             WHEN 1
             WHEN 2
             WHEN OTHER
               DISPLAY "OK" WITH NO ADVANCING
           END-EVALUATE.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/empty-imperative.at:131: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "empty-imperative.at:131"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:131"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/empty-imperative.at:132: java prog"
at_fn_check_prepare_trace "empty-imperative.at:132"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:132"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_25
#AT_START_26
at_fn_group_banner 26 'empty-imperative.at:136' \
  "Allow empty EVALUATE- semantics 3" "              "
at_xfail=no
(
  $as_echo "26. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 A PIC 9 VALUE 0.
       PROCEDURE        DIVISION.
           EVALUATE A
             WHEN 1
             WHEN 2
             WHEN OTHER
               DISPLAY "OK" WITH NO ADVANCING
           END-EVALUATE.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/empty-imperative.at:154: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "empty-imperative.at:154"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/empty-imperative.at:155: java prog"
at_fn_check_prepare_trace "empty-imperative.at:155"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/empty-imperative.at:155"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_26
#AT_START_27
at_fn_group_banner 27 'spl-registers.at:1' \
  "PROGRAM-STATUS" "                                 "
at_xfail=no
(
  $as_echo "27. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           MOVE 99 TO PROGRAM-STATUS.
           EXIT PROGRAM.
_ATEOF


{ set +x
$as_echo "$at_srcdir/spl-registers.at:11: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "spl-registers.at:11"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:11"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:12: java prog"
at_fn_check_prepare_trace "spl-registers.at:12"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 99 $at_status "$at_srcdir/spl-registers.at:12"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_27
#AT_START_28
at_fn_group_banner 28 'spl-registers.at:16' \
  "SORT-STATUS (alias SORT-RETURN)" "                "
at_xfail=no
(
  $as_echo "28. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       PROCEDURE            DIVISION.
          MOVE 16 TO SORT-STATUS.
          DISPLAY SORT-RETURN WITH NO ADVANCING.
          STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/spl-registers.at:27: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "spl-registers.at:27"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:27"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:28: java prog"
at_fn_check_prepare_trace "spl-registers.at:28"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "+000000016" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:28"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_28
#AT_START_29
at_fn_group_banner 29 'spl-registers.at:32' \
  "SORT-STATUS (Break in input section)" "           "
at_xfail=no
(
  $as_echo "29. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             INPUT  PROCEDURE IS IPROC1
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       IPROC1               SECTION.
          OPEN INPUT INPUT-FILE1.
       BEGIN-IPROC1.
          READ INPUT-FILE1 AT END GO TO END-IPROC1.
          MOVE INPUT-REC1 TO SORT-REC1.
          RELEASE SORT-REC1.
      * Break by SORT-STATUS!!
          MOVE 16 TO SORT-STATUS.
          GO TO BEGIN-IPROC1.
       END-IPROC1.
          CLOSE INPUT-FILE1.
          EXIT.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN SORT-FILE1 AT END GO TO END-OPROC1.
          MOVE SORT-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
          GO TO BEGIN-OPROC1.
       END-OPROC1.
          CLOSE OUTPUT-FILE1.
          EXIT.
       END PROGRAM prog.
_ATEOF


{ set +x
$as_echo "$at_srcdir/spl-registers.at:87: echo -n 030303020301020302020201010301020101 >input.txt"
at_fn_check_prepare_trace "spl-registers.at:87"
( $at_check_trace; echo -n 030303020301020302020201010301020101 >input.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:88: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "spl-registers.at:88"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:89: java prog"
at_fn_check_prepare_trace "spl-registers.at:89"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "WARNING - Implicit CLOSE of INPUT-FILE1 (\"./input.txt\")
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:92: if test -f output.txt ; then echo -n NG ; else echo -n OK ; fi"
at_fn_check_prepare_trace "spl-registers.at:92"
( $at_check_trace; if test -f output.txt ; then echo -n NG ; else echo -n OK ; fi
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_29
#AT_START_30
at_fn_group_banner 30 'spl-registers.at:96' \
  "SORT-STATUS (Break in output section)" "          "
at_xfail=no
(
  $as_echo "30. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             INPUT  PROCEDURE IS IPROC1
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       IPROC1               SECTION.
          OPEN INPUT INPUT-FILE1.
       BEGIN-IPROC1.
          READ INPUT-FILE1 AT END GO TO END-IPROC1.
          MOVE INPUT-REC1 TO SORT-REC1.
          RELEASE SORT-REC1.
          GO TO BEGIN-IPROC1.
       END-IPROC1.
          CLOSE INPUT-FILE1.
          EXIT.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN SORT-FILE1 AT END GO TO END-OPROC1.
          MOVE SORT-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
      * Break by SORT-STATUS!!
          MOVE 16 TO SORT-STATUS.
          GO TO BEGIN-OPROC1.
       END-OPROC1.
          CLOSE OUTPUT-FILE1.
          EXIT.
       END PROGRAM prog.
_ATEOF


{ set +x
$as_echo "$at_srcdir/spl-registers.at:151: echo -n 030303020301020302020201010301020101 >input.txt"
at_fn_check_prepare_trace "spl-registers.at:151"
( $at_check_trace; echo -n 030303020301020302020201010301020101 >input.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:151"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:152: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "spl-registers.at:152"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:152"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:153: java prog"
at_fn_check_prepare_trace "spl-registers.at:153"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "WARNING - Implicit CLOSE of OUTPUT-FILE1 (\"./output.txt\")
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:153"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:156: cat output.txt"
at_fn_check_prepare_trace "spl-registers.at:156"
( $at_check_trace; cat output.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "0103" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:156"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_30
#AT_START_31
at_fn_group_banner 31 'spl-registers.at:160' \
  "SORT-STATUS (Break in section with THRU)" "       "
at_xfail=no
(
  $as_echo "31. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             INPUT  PROCEDURE IS IPROC1 THRU END-IPROC1
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       IPROC1               SECTION.
          OPEN INPUT INPUT-FILE1.
       BEGIN-IPROC1.
          READ INPUT-FILE1 AT END GO TO END-IPROC1.
          MOVE INPUT-REC1 TO SORT-REC1.
          RELEASE SORT-REC1.
          GO TO BEGIN-IPROC1.
       END-IPROC1           SECTION.
          CLOSE INPUT-FILE1.
       AFTER-IPROC1         SECTION.
          DISPLAY "OVERRUN!!!!" WITH NO ADVANCING.
          EXIT.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN SORT-FILE1 AT END GO TO END-OPROC1.
          MOVE SORT-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
      * Break by SORT-STATUS!!
          MOVE 16 TO SORT-STATUS.
          GO TO BEGIN-OPROC1.
       END-OPROC1           SECTION.
          CLOSE OUTPUT-FILE1.
       AFTER-OPROC1         SECTION.
          DISPLAY "OVERRUN!!!!" WITH NO ADVANCING.
          EXIT.
       END PROGRAM prog.
_ATEOF


{ set +x
$as_echo "$at_srcdir/spl-registers.at:219: echo -n 030303020301020302020201010301020101 >input.txt"
at_fn_check_prepare_trace "spl-registers.at:219"
( $at_check_trace; echo -n 030303020301020302020201010301020101 >input.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:219"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:220: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "spl-registers.at:220"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:220"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:221: java prog"
at_fn_check_prepare_trace "spl-registers.at:221"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "WARNING - Implicit CLOSE of OUTPUT-FILE1 (\"./output.txt\")
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:221"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:224: cat output.txt"
at_fn_check_prepare_trace "spl-registers.at:224"
( $at_check_trace; cat output.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "0103" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_31
#AT_START_32
at_fn_group_banner 32 'spl-registers.at:228' \
  "SORT-STATUS break in MERGE" "                     "
at_xfail=no
(
  $as_echo "32. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT MERGE-FILE1 ASSIGN TO "M01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT INPUT-FILE2  ASSIGN TO "./input2.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD MERGE-FILE1.
       01 MERGE-REC1.
          02 MERGE-KEY1  PIC XX.
          02 MERGE-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD INPUT-FILE2.
       01 INPUT-REC2.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          MERGE MERGE-FILE1 ON ASCENDING KEY MERGE-KEY1
             USING INPUT-FILE1 INPUT-FILE2
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN MERGE-FILE1 AT END GO TO END-OPROC1.
          MOVE MERGE-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
      * Break by SORT-STATUS!!
          MOVE 16 TO SORT-STATUS.
          GO TO BEGIN-OPROC1.
       END-OPROC1.
          CLOSE OUTPUT-FILE1.
          EXIT.
       END PROGRAM prog.
_ATEOF


{ set +x
$as_echo "$at_srcdir/spl-registers.at:278: echo -n 030303020301020302020201010301020101 >input.txt"
at_fn_check_prepare_trace "spl-registers.at:278"
( $at_check_trace; echo -n 030303020301020302020201010301020101 >input.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:278"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:279: echo -n 030603040305020502060204010601040104 >input2.txt"
at_fn_check_prepare_trace "spl-registers.at:279"
( $at_check_trace; echo -n 030603040305020502060204010601040104 >input2.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:279"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:280: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "spl-registers.at:280"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:280"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:281: java prog"
at_fn_check_prepare_trace "spl-registers.at:281"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "WARNING - Implicit CLOSE of OUTPUT-FILE1 (\"./output.txt\")
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:281"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:284: cat output.txt"
at_fn_check_prepare_trace "spl-registers.at:284"
( $at_check_trace; cat output.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "0103" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_32
#AT_START_33
at_fn_group_banner 33 'spl-registers.at:288' \
  "SORT-STATUS break with No SORT-STATUS in pgm" "   "
at_xfail=no
(
  $as_echo "33. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01".
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             INPUT  PROCEDURE IS IPROC1
             OUTPUT PROCEDURE IS OPROC1.
          GOBACK.
       IPROC1               SECTION.
          OPEN INPUT INPUT-FILE1.
       BEGIN-IPROC1.
          READ INPUT-FILE1 AT END GO TO END-IPROC1.
          MOVE INPUT-REC1 TO SORT-REC1.
          RELEASE SORT-REC1.
          GO TO BEGIN-IPROC1.
       END-IPROC1.
          CLOSE INPUT-FILE1.
          EXIT.
       OPROC1               SECTION.
          OPEN OUTPUT OUTPUT-FILE1.
       BEGIN-OPROC1.
          RETURN SORT-FILE1 AT END GO TO END-OPROC1.
          MOVE SORT-REC1 TO OUTPUT-REC1.
          WRITE OUTPUT-REC1.
      * Break by SORT-RETURN!!
          MOVE 16 TO SORT-RETURN.
          GO TO BEGIN-OPROC1.
       END-OPROC1.
          CLOSE OUTPUT-FILE1.
          EXIT.
       END PROGRAM prog.
_ATEOF


{ set +x
$as_echo "$at_srcdir/spl-registers.at:343: echo -n 030303020301020302020201010301020101 >input.txt"
at_fn_check_prepare_trace "spl-registers.at:343"
( $at_check_trace; echo -n 030303020301020302020201010301020101 >input.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:343"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:344: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "spl-registers.at:344"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:344"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:345: java prog"
at_fn_check_prepare_trace "spl-registers.at:345"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:42: libcob: SORT-STATUS is set to 16.
WARNING - Implicit CLOSE of OUTPUT-FILE1 (\"./output.txt\")
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/spl-registers.at:345"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/spl-registers.at:349: cat output.txt"
at_fn_check_prepare_trace "spl-registers.at:349"
( $at_check_trace; cat output.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "0103" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/spl-registers.at:349"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_33
#AT_START_34
at_fn_group_banner 34 'special-names.at:1' \
  "ACCEPT ARGUMENT-NUMBER" "                         "
at_xfail=no
(
  $as_echo "34. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ARGUMENT-NUMBER IS NUMARG.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 argc  PIC 99  USAGE DISPLAY.
       PROCEDURE        DIVISION.
           ACCEPT argc FROM NUMARG.
           DISPLAY argc WITH NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/special-names.at:19: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "special-names.at:19"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/special-names.at:20: java prog this is arg"
at_fn_check_prepare_trace "special-names.at:20"
( $at_check_trace; java prog this is arg
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "03" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_34
#AT_START_35
at_fn_group_banner 35 'special-names.at:24' \
  "ACCEPT ARGUMENT-VALUE" "                          "
at_xfail=no
(
  $as_echo "35. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ARGUMENT-VALUE  IS ARGVAL.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 argv PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 3   UPON ARGUMENT-NUMBER
           ACCEPT argv FROM ARGVAL.
           DISPLAY argv NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/special-names.at:43: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "special-names.at:43"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/special-names.at:44: java prog this is arg"
at_fn_check_prepare_trace "special-names.at:44"
( $at_check_trace; java prog this is arg
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "arg     " | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_35
#AT_START_36
at_fn_group_banner 36 'special-names.at:48' \
  "ACCEPT ENVIRONMENT-VALUE" "                       "
at_xfail=no
(
  $as_echo "36. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ENVIRONMENT-VALUE IS ENVVAL.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 env1 PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 'TESTENV' UPON ENVIRONMENT-NAME.
           ACCEPT env1 FROM ENVVAL.
           DISPLAY env1 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/special-names.at:67: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "special-names.at:67"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/special-names.at:68: export TESTENV=envvalue && java prog"
at_fn_check_prepare_trace "special-names.at:68"
( $at_check_trace; export TESTENV=envvalue && java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "envvalue" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_36
#AT_START_37
at_fn_group_banner 37 'special-names.at:72' \
  "DISPLAY ARGUMENT-NUMBER" "                        "
at_xfail=no
(
  $as_echo "37. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ARGUMENT-NUMBER IS NUMARG.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 argv PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 3 UPON NUMARG.
           ACCEPT argv FROM ARGUMENT-VALUE.
           DISPLAY argv WITH NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/special-names.at:91: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "special-names.at:91"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/special-names.at:92: java prog this is arg"
at_fn_check_prepare_trace "special-names.at:92"
( $at_check_trace; java prog this is arg
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "arg     " | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:92"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_37
#AT_START_38
at_fn_group_banner 38 'special-names.at:96' \
  "DISPLAY ENVIRONMENT-NAME" "                       "
at_xfail=no
(
  $as_echo "38. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ENVIRONMENT-NAME IS ENVNAME.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 env1 PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 'TESTENV' UPON ENVNAME.
           ACCEPT env1 FROM ENVIRONMENT-VALUE.
           DISPLAY env1 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/special-names.at:115: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "special-names.at:115"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:115"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/special-names.at:116: export TESTENV=envvalue && java prog"
at_fn_check_prepare_trace "special-names.at:116"
( $at_check_trace; export TESTENV=envvalue && java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "envvalue" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:116"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_38
#AT_START_39
at_fn_group_banner 39 'special-names.at:120' \
  "DISPLAY ENVIRONMENT-VALUE" "                      "
at_xfail=no
(
  $as_echo "39. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           ENVIRONMENT-VALUE IS ENVVAL.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 env1 PIC X(8) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           DISPLAY 'TESTENV' UPON ENVIRONMENT-NAME.
           ACCEPT env1 FROM ENVVAL.
           DISPLAY env1 WITH NO ADVANCING.
           DISPLAY ":" WITH NO ADVANCING.
           DISPLAY 'newvalue' UPON ENVVAL.
           ACCEPT env1 FROM ENVVAL.
           DISPLAY env1 WITH NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/special-names.at:143: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "special-names.at:143"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:143"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/special-names.at:144: export TESTENV=envvalue && java prog"
at_fn_check_prepare_trace "special-names.at:144"
( $at_check_trace; export TESTENV=envvalue && java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "envvalue:newvalue" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:144"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_39
#AT_START_40
at_fn_group_banner 40 'special-names.at:148' \
  "SPECIAL NAMES unterminated" "                     "
at_xfail=no
(
  $as_echo "40. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       CONFIGURATION    SECTION.
       SPECIAL-NAMES.
           SWITCH-1 IS SW01 ON SW01ON OFF SW01OFF
           C01      IS LF
       DATA             DIVISION.
_ATEOF


{ set +x
$as_echo "$at_srcdir/special-names.at:161: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "special-names.at:161"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/special-names.at:161"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_40
#AT_START_41
at_fn_group_banner 41 'intr-funcs.at:1' \
  "FUNCTION LENG (fixed)" "                          "
at_xfail=no
(
  $as_echo "41. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 FIXED_FLD PIC X(8) USAGE DISPLAY.
       77 NLEN      PIC 9(2) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE FUNCTION LENG (FIXED_FLD) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/intr-funcs.at:16: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "intr-funcs.at:16"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/intr-funcs.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/intr-funcs.at:17: java prog"
at_fn_check_prepare_trace "intr-funcs.at:17"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "08" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/intr-funcs.at:17"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_41
#AT_START_42
at_fn_group_banner 42 'intr-funcs.at:21' \
  "FUNCTION LENG (occur. depending)" "               "
at_xfail=no
(
  $as_echo "42. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 DEP_FLD.
          03 DEP_ITEM  PIC X(2) OCCURS 1 TO 10 DEPENDING ON NDEP.
       77 NDEP         PIC 9(2) USAGE DISPLAY.
       77 NLEN         PIC 9(2) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE 2 TO NDEP.
           MOVE FUNCTION LENG (DEP_FLD) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/intr-funcs.at:39: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "intr-funcs.at:39"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/intr-funcs.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/intr-funcs.at:40: java prog"
at_fn_check_prepare_trace "intr-funcs.at:40"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "04" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/intr-funcs.at:40"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_42
#AT_START_43
at_fn_group_banner 43 'intr-funcs.at:44' \
  "FUNCTION LENGTH-AN (fixed)" "                     "
at_xfail=no
(
  $as_echo "43. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 FIXED_FLD PIC X(8) USAGE DISPLAY.
       77 NLEN      PIC 9(2) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE FUNCTION LENGTH-AN (FIXED_FLD) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/intr-funcs.at:59: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "intr-funcs.at:59"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/intr-funcs.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/intr-funcs.at:60: java prog"
at_fn_check_prepare_trace "intr-funcs.at:60"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "08" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/intr-funcs.at:60"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_43
#AT_START_44
at_fn_group_banner 44 'intr-funcs.at:64' \
  "FUNCTION LENGTH-AN (occur. depending)" "          "
at_xfail=no
(
  $as_echo "44. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 DEP_FLD.
          03 DEP_ITEM  PIC X(2) OCCURS 1 TO 10 DEPENDING ON NDEP.
       77 NDEP         PIC 9(2) USAGE DISPLAY.
       77 NLEN         PIC 9(2) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE 2 TO NDEP.
           MOVE FUNCTION LENGTH-AN (DEP_FLD) TO NLEN.
           DISPLAY NLEN WITH NO ADVANCING.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/intr-funcs.at:82: \${COMPILE_JP_COMPAT} -x prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "intr-funcs.at:82"
( $at_check_trace; ${COMPILE_JP_COMPAT} -x prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/intr-funcs.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/intr-funcs.at:83: java prog"
at_fn_check_prepare_trace "intr-funcs.at:83"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "04" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/intr-funcs.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_44
#AT_START_45
at_fn_group_banner 45 'file-control.at:1' \
  "Allow no file open (I-O, SEQUENTIAL)" "           "
at_xfail=no
(
  $as_echo "45. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN I-O TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:26: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:26"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:27: export OC_IO_CREATES=yes && \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:27"
( $at_check_trace; export OC_IO_CREATES=yes && ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:27"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_45
#AT_START_46
at_fn_group_banner 46 'file-control.at:32' \
  "Allow no file open (I-O, LINE SEQ)" "             "
at_xfail=no
(
  $as_echo "46. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION LINE SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN I-O TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:57: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:57"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:58: export OC_IO_CREATES=yes && \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:58"
( $at_check_trace; export OC_IO_CREATES=yes && ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_46
#AT_START_47
at_fn_group_banner 47 'file-control.at:63' \
  "Allow no file open (I-O, RELATIVE)" "             "
at_xfail=no
(
  $as_echo "47. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION RELATIVE
                        ACCESS MODE  DYNAMIC
                        RELATIVE KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN I-O TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:90: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:90"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:91: export OC_IO_CREATES=yes && \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:91"
( $at_check_trace; export OC_IO_CREATES=yes && ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_47
#AT_START_48
at_fn_group_banner 48 'file-control.at:96' \
  "Allow no file open (I-O, INDEXED)" "              "
at_xfail=no
(
  $as_echo "48. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION INDEXED
                        ACCESS MODE  DYNAMIC
                        RECORD KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN I-O TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:123: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:123"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:124: export OC_IO_CREATES=yes && \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:124"
( $at_check_trace; export OC_IO_CREATES=yes && ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_48
#AT_START_49
at_fn_group_banner 49 'file-control.at:129' \
  "Allow no file open (EXTEND, SEQUENTIAL)" "        "
at_xfail=no
(
  $as_echo "49. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN EXTEND TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:154: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:154"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:154"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:155: export OC_EXTEND_CREATES=yes && \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:155"
( $at_check_trace; export OC_EXTEND_CREATES=yes && ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:155"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_49
#AT_START_50
at_fn_group_banner 50 'file-control.at:160' \
  "Allow no file open (EXTEND, LINE SEQ)" "          "
at_xfail=no
(
  $as_echo "50. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION LINE SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN EXTEND TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:185: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:185"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:185"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:186: export OC_EXTEND_CREATES=yes && \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:186"
( $at_check_trace; export OC_EXTEND_CREATES=yes && ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:186"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_50
#AT_START_51
at_fn_group_banner 51 'file-control.at:191' \
  "Allow no file open (EXTEND, RELATIVE)" "          "
at_xfail=no
(
  $as_echo "51. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION RELATIVE
                        ACCESS MODE  DYNAMIC
                        RELATIVE KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN EXTEND TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:218: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:218"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:218"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:219: export OC_EXTEND_CREATES=yes && \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:219"
( $at_check_trace; export OC_EXTEND_CREATES=yes && ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:219"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_51
#AT_START_52
at_fn_group_banner 52 'file-control.at:224' \
  "Allow no file open (EXTEND, INDEXED)" "           "
at_xfail=no
(
  $as_echo "52. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION INDEXED
                        ACCESS MODE  DYNAMIC
                        RECORD KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN EXTEND TEST-FILE.
           DISPLAY F-STATUS.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:251: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:251"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:251"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:252: export OC_EXTEND_CREATES=yes && \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:252"
( $at_check_trace; export OC_EXTEND_CREATES=yes && ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:252"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_52
#AT_START_53
at_fn_group_banner 53 'file-control.at:257' \
  "Allow file delete (SEQUENTIAL)" "                 "
at_xfail=no
(
  $as_echo "53. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:283: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:283"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:283"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:284: \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:284"
( $at_check_trace; ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:284"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_53
#AT_START_54
at_fn_group_banner 54 'file-control.at:289' \
  "Allow file delete (LINE SEQ)" "                   "
at_xfail=no
(
  $as_echo "54. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION LINE SEQUENTIAL
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:315: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:315"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:315"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:316: \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:316"
( $at_check_trace; ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:316"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_54
#AT_START_55
at_fn_group_banner 55 'file-control.at:321' \
  "Allow file delete (RELATIVE)" "                   "
at_xfail=no
(
  $as_echo "55. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION RELATIVE
                        ACCESS MODE  DYNAMIC
                        RELATIVE KEY TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:349: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:349"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:349"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:350: \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:350"
( $at_check_trace; ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:350"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_55
#AT_START_56
at_fn_group_banner 56 'file-control.at:355' \
  "Allow file delete (INDEXED)" "                    "
at_xfail=no
(
  $as_echo "56. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/file-control.at:357: test \$COB_SPLITKEY_FLAGS = \"yes\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"yes\" || exit 77" "file-control.at:357"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "yes" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:357"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION INDEXED
                        ACCESS MODE  DYNAMIC
                        RECORD KEY   TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:385: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:385"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:385"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:386: \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:386"
( $at_check_trace; ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "00
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:386"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_56
#AT_START_57
at_fn_group_banner 57 'file-control.at:391' \
  "Allow file delete (INDEXED) - not available" "    "
at_xfail=no
(
  $as_echo "57. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/file-control.at:393: test \$COB_SPLITKEY_FLAGS = \"no\" || exit 77"
at_fn_check_prepare_dynamic "test $COB_SPLITKEY_FLAGS = \"no\" || exit 77" "file-control.at:393"
( $at_check_trace; test $COB_SPLITKEY_FLAGS = "no" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:393"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION INDEXED
                        ACCESS MODE  DYNAMIC
                        RECORD KEY   TEST-KEY
                        FILE STATUS  F-STATUS.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       WORKING-STORAGE  SECTION.
       77 F-STATUS      PIC X(02).
       PROCEDURE DIVISION.
           OPEN OUTPUT TEST-FILE.
           CLOSE TEST-FILE.
           DELETE FILE TEST-FILE.
           DISPLAY F-STATUS.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:421: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:421"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:421"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:422: \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:422"
( $at_check_trace; ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "91
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:422"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_57
#AT_START_58
at_fn_group_banner 58 'file-control.at:427' \
  "Assume REWRITE for WRITE on OPEN I-O" "           "
at_xfail=no
(
  $as_echo "58. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE".
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN I-O TEST-FILE.
           READ  TEST-FILE.
           READ  TEST-FILE.
           MOVE  "AAAA" TO TEST-REC.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:450: echo 000011112222 >TEST-FILE"
at_fn_check_prepare_trace "file-control.at:450"
( $at_check_trace; echo 000011112222 >TEST-FILE
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:450"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:451: \${COMPILE_MODULE} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:451"
( $at_check_trace; ${COMPILE_MODULE} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:451"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:452: COB_IO_ASSUME_REWRITE=Y \${COBCRUN} prog"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:452"
( $at_check_trace; COB_IO_ASSUME_REWRITE=Y ${COBCRUN} prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:452"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:453: test \`cat TEST-FILE\` = '0000AAAA2222'"
at_fn_check_prepare_notrace 'a `...` command substitution' "file-control.at:453"
( $at_check_trace; test `cat TEST-FILE` = '0000AAAA2222'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:453"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_58
#AT_START_59
at_fn_group_banner 59 'file-control.at:457' \
  "READ/WRITE INVALID KEY on SEQUENTIAL" "           "
at_xfail=no
(
  $as_echo "59. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE"
                        ORGANIZATION SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN OUTPUT TEST-FILE.
           MOVE  "AAAA" TO TEST-REC.
           WRITE TEST-REC
             INVALID KEY DISPLAY "INVALIDK".
           CLOSE TEST-FILE.
           OPEN INPUT TEST-FILE.
           READ  TEST-FILE
             INVALID KEY DISPLAY "INVALIDK".
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:484: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:484"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:484"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-control.at:485: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:485"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:16: Error: INVALID KEY clause invalid with this file type
prog.cob:21: Error: INVALID KEY clause invalid with this file type
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/file-control.at:485"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_59
#AT_START_60
at_fn_group_banner 60 'file-control.at:492' \
  "NOMINAL KEY (PENDING)" "                          "
at_xfail=no
(
  $as_echo "60. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE"
                        ORGANIZATION INDEXED
                        RECORD  KEY RK01
                        NOMINAL KEY K01.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
         03  RK01  PIC XX.
         03  DT03  PIC X(4).
       WORKING-STORAGE  SECTION.
       01  K01  PIC XX.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:514: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:514"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:10: Warning: 'NOMINAL KEY' not implemented
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:514"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_60
#AT_START_61
at_fn_group_banner 61 'file-control.at:520' \
  "ASSIGN TO multiple Devs. (PENDING)" "             "
at_xfail=no
(
  $as_echo "61. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT SORT-FILE ASSIGN 2 FILE1 FILE2.
       DATA             DIVISION.
       FILE             SECTION.
       FD SORT-FILE.
       01 SORT-REC.
         03  RK01  PIC XX.
         03  DT03  PIC X(4).
       WORKING-STORAGE  SECTION.
       01  FILE1  PIC X(10) VALUE "SORT-FILE1".
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:539: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:539"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:7: Warning: 'ASSIGN TO multiple external device names' not implemented
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:539"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_61
#AT_START_62
at_fn_group_banner 62 'file-control.at:545' \
  "ASSIGN TO multiple Devs. (PENDING)" "             "
at_xfail=no
(
  $as_echo "62. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT SORT-FILE ASSIGN 2 FILE1 FILE2.
       DATA             DIVISION.
       FILE             SECTION.
       FD SORT-FILE.
       01 SORT-REC.
         03  RK01  PIC XX.
         03  DT03  PIC X(4).
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:562: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:562"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:7: Warning: 'ASSIGN TO multiple external device names' not implemented
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:562"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_62
#AT_START_63
at_fn_group_banner 63 'file-control.at:568' \
  "ignore SELECT RESERVE 'NO'" "                     "
at_xfail=no
(
  $as_echo "63. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT SORT-FILE ASSIGN "TEST-FILE"
                        RESERVE  NO.
       DATA             DIVISION.
       FILE             SECTION.
       FD SORT-FILE.
       01 SORT-REC.
         03  RK01  PIC XX.
         03  DT03  PIC X(4).
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-control.at:586: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-control.at:586"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-control.at:586"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_63
#AT_START_64
at_fn_group_banner 64 'file-userfh.at:1' \
  "USERFH - READ LOCK - so" "                        "
at_xfail=no
(
  $as_echo "64. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/file-userfh.at:3: test \$SHREXT != \"dll\" || exit 77"
at_fn_check_prepare_dynamic "test $SHREXT != \"dll\" || exit 77" "file-userfh.at:3"
( $at_check_trace; test $SHREXT != "dll" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:3"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >hoge.c <<'_ATEOF'

#include <stdio.h>
#include <string.h>
#include <libcob/fileio.h>

int hoge (unsigned char *s1, unsigned char *s2, unsigned char *s3, unsigned char *s4,
          unsigned char *s5, unsigned char *s6, unsigned char *s7, unsigned char *s8,
          unsigned char **s9, unsigned char *s10)
{
	if (s8) {
		printf("%s", s8);
	}
	return 0;
}
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION        DIVISION.
       PROGRAM-ID.           prog.
       ENVIRONMENT           DIVISION.
       INPUT-OUTPUT          SECTION.
       FILE-CONTROL.
       SELECT INPUT-FILE     ASSIGN TO "./input.txt".
       DATA                  DIVISION.
       FILE                  SECTION.
       FD  INPUT-FILE.
       01  INPUT-REC.
           03  REC-KEY1      PIC X(4).
           03  REC-KEY2      PIC X(4).
       PROCEDURE             DIVISION.
           OPEN INPUT INPUT-FILE.
           READ INPUT-FILE WITH IGNORE LOCK.
           CLOSE INPUT-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-userfh.at:41: echo -n 12341234 >input.txt"
at_fn_check_prepare_trace "file-userfh.at:41"
( $at_check_trace; echo -n 12341234 >input.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-userfh.at:42: \${CC} -shared -I\${abs_top_srcdir} -o hoge.\${SHREXT} hoge.c -fPIC"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-userfh.at:42"
( $at_check_trace; ${CC} -shared -I${abs_top_srcdir} -o hoge.${SHREXT} hoge.c -fPIC
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-userfh.at:43: cobc -m prog.cob"
at_fn_check_prepare_trace "file-userfh.at:43"
( $at_check_trace; cobc -m prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-userfh.at:44: export OC_USERFH=hoge && java prog"
at_fn_check_prepare_trace "file-userfh.at:44"
( $at_check_trace; export OC_USERFH=hoge && java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "257" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_64
#AT_START_65
at_fn_group_banner 65 'file-userfh.at:48' \
  "USERFH - READ LOCK - dll" "                       "
at_xfail=no
(
  $as_echo "65. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/file-userfh.at:50: test \$SHREXT = \"dll\" || exit 77"
at_fn_check_prepare_dynamic "test $SHREXT = \"dll\" || exit 77" "file-userfh.at:50"
( $at_check_trace; test $SHREXT = "dll" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >hoge.c <<'_ATEOF'

#include <stdio.h>
#include <string.h>
#include <libcob/fileio.h>

int hoge (unsigned char *s1, unsigned char *s2, unsigned char *s3, unsigned char *s4,
          unsigned char *s5, unsigned char *s6, unsigned char *s7, unsigned char *s8,
          unsigned char **s9, unsigned char *s10)
{
	if (s8) {
		printf("%s", s8);
	}
	return 0;
}
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION        DIVISION.
       PROGRAM-ID.           prog.
       ENVIRONMENT           DIVISION.
       INPUT-OUTPUT          SECTION.
       FILE-CONTROL.
       SELECT INPUT-FILE     ASSIGN TO "./input.txt".
       DATA                  DIVISION.
       FILE                  SECTION.
       FD  INPUT-FILE.
       01  INPUT-REC.
           03  REC-KEY1      PIC X(4).
           03  REC-KEY2      PIC X(4).
       PROCEDURE             DIVISION.
           OPEN INPUT INPUT-FILE.
           READ INPUT-FILE WITH IGNORE LOCK.
           CLOSE INPUT-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-userfh.at:88: echo -n 12341234 >input.txt"
at_fn_check_prepare_trace "file-userfh.at:88"
( $at_check_trace; echo -n 12341234 >input.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:88"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-userfh.at:89: \${CC} -shared -I\${abs_top_srcdir} -o hoge.\${SHREXT} hoge.c"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-userfh.at:89"
( $at_check_trace; ${CC} -shared -I${abs_top_srcdir} -o hoge.${SHREXT} hoge.c
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:89"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-userfh.at:90: cobc -m prog.cob"
at_fn_check_prepare_trace "file-userfh.at:90"
( $at_check_trace; cobc -m prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:90"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-userfh.at:91: export OC_USERFH=hoge && java prog"
at_fn_check_prepare_trace "file-userfh.at:91"
( $at_check_trace; export OC_USERFH=hoge && java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "257" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-userfh.at:91"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_65
#AT_START_66
at_fn_group_banner 66 'copy-joining.at:1' \
  "COPY JOINING AS PREFIX" "                         "
at_xfail=no
(
  $as_echo "66. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >copy.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" JOINING O AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY O-TEST-VAR NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-joining.at:20: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-joining.at:20"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:20"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-joining.at:21: java prog"
at_fn_check_prepare_trace "copy-joining.at:21"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_66
#AT_START_67
at_fn_group_banner 67 'copy-joining.at:25' \
  "COPY JOINING AS SUFFIX" "                         "
at_xfail=no
(
  $as_echo "67. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >copy.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" JOINING X AS SUFFIX.
       PROCEDURE        DIVISION.
           DISPLAY TEST-VAR-X NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-joining.at:44: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-joining.at:44"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:44"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-joining.at:45: java prog"
at_fn_check_prepare_trace "copy-joining.at:45"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:45"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_67
#AT_START_68
at_fn_group_banner 68 'copy-joining.at:49' \
  "JOINING in RECURSIVE COPY" "                      "
at_xfail=no
(
  $as_echo "68. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >copy-2.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >copy-1.inc <<'_ATEOF'

       COPY "copy-2.inc".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy-1.inc" JOINING O AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY O-TEST-VAR NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-joining.at:72: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-joining.at:72"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:72"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-joining.at:73: java prog"
at_fn_check_prepare_trace "copy-joining.at:73"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:73"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_68
#AT_START_69
at_fn_group_banner 69 'copy-joining.at:77' \
  "JOINed in REDEFINES clause" "                     "
at_xfail=no
(
  $as_echo "69. $at_setup_line: testing $at_desc ..."
  $at_traceon



cat >copy.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
       01 TEST-VAR2 REDEFINES TEST-VAR PIC X(2).
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       COPY "copy.inc" JOINING O AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY O-TEST-VAR2 NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-joining.at:97: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-joining.at:97"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:97"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-joining.at:98: java prog"
at_fn_check_prepare_trace "copy-joining.at:98"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:98"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_69
#AT_START_70
at_fn_group_banner 70 'copy-joining.at:102' \
  "COPY JOINING EXISTING NAME" "                     "
at_xfail=no
(
  $as_echo "70. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >copy.inc <<'_ATEOF'

       01 TEST-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 TEST1.
         03 DATA1   PIC X(01).
       COPY "copy.inc" JOINING TEST1 AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY TEST1-TEST-VAR NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-joining.at:122: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-joining.at:122"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:122"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-joining.at:123: java prog"
at_fn_check_prepare_trace "copy-joining.at:123"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:123"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_70
#AT_START_71
at_fn_group_banner 71 'copy-joining.at:127' \
  "COPY JOINING Group fields" "                      "
at_xfail=no
(
  $as_echo "71. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >copy.inc <<'_ATEOF'

       01 TEST-VAR.
         03 TEST-VAR2 PIC X(2) VALUE "NG".
         03 TEST-VAR3 PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 TEST1.
         03 DATA1   PIC X(01).
       COPY "copy.inc" JOINING TEST1 AS PREFIX.
       PROCEDURE        DIVISION.
           DISPLAY TEST1-TEST-VAR3 NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-joining.at:149: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-joining.at:149"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:149"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-joining.at:150: java prog"
at_fn_check_prepare_trace "copy-joining.at:150"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:150"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_71
#AT_START_72
at_fn_group_banner 72 'copy-joining.at:154' \
  "*NO* JOINING following JOINING " "                "
at_xfail=no
(
  $as_echo "72. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >copy1.inc <<'_ATEOF'

       01 TEST1-VAR PIC X(2) VALUE "NG".
_ATEOF


cat >copy2.inc <<'_ATEOF'

       01 TEST2-VAR PIC X(2) VALUE "OK".
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 TEST1.
         03 DATA1   PIC X(01).
       COPY "copy1.inc" JOINING TEST1 AS PREFIX.
       COPY "copy2.inc".
       PROCEDURE        DIVISION.
           DISPLAY TEST2-VAR NO ADVANCING
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-joining.at:179: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-joining.at:179"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:179"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/copy-joining.at:180: java prog"
at_fn_check_prepare_trace "copy-joining.at:180"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/copy-joining.at:180"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_72
#AT_START_73
at_fn_group_banner 73 'copy-joining.at:184' \
  "*NO* JOINING FILLER" "                            "
at_xfail=no
(
  $as_echo "73. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >copy.inc <<'_ATEOF'

       01 TEST-REC.
         03 TEST-VAR1  PIC X(2).
         03 FILLER     PIC X(2).
         03 TEST-VAR2  PIC X(2).
         03 FILLER     PIC X(2).
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT IN-FILE   ASSIGN "IN-FILE".
       DATA             DIVISION.
       FILE             SECTION.
       FD IN-FILE.
       COPY "copy.inc" JOINING I AS PREFIX.
       PROCEDURE        DIVISION.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/copy-joining.at:209: \${COMPILE_JP_COMPAT} -E prog.cob | grep I-FILLER"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "copy-joining.at:209"
( $at_check_trace; ${COMPILE_JP_COMPAT} -E prog.cob | grep I-FILLER
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/copy-joining.at:209"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_73
#AT_START_74
at_fn_group_banner 74 'assign-devicename.at:1' \
  "ASSIGN coded device name" "                       "
at_xfail=no
(
  $as_echo "74. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >TEST1 <<'_ATEOF'
OK.
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT F01 ASSIGN TO SYS01-DA-DK-S-TEST1
                  ORGANIZATION LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD  F01.
       01  F01R         PIC X(8).
       PROCEDURE        DIVISION.
           OPEN INPUT F01.
           READ F01.
           DISPLAY F01R WITH NO ADVANCING.
           CLOSE F01.
_ATEOF


{ set +x
$as_echo "$at_srcdir/assign-devicename.at:25: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "assign-devicename.at:25"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/assign-devicename.at:25"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/assign-devicename.at:26: java prog"
at_fn_check_prepare_trace "assign-devicename.at:26"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK.     " | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/assign-devicename.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_74
#AT_START_75
at_fn_group_banner 75 'assign-devicename.at:30' \
  "ASSIGN coded device w/o def.name" "               "
at_xfail=no
(
  $as_echo "75. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >SYS01 <<'_ATEOF'
OK.
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT F01 ASSIGN TO SYS01-DA-DK-S
                  ORGANIZATION LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD  F01.
       01  F01R         PIC X(8).
       PROCEDURE        DIVISION.
           OPEN INPUT F01.
           READ F01.
           DISPLAY F01R WITH NO ADVANCING.
           CLOSE F01.
_ATEOF


{ set +x
$as_echo "$at_srcdir/assign-devicename.at:54: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "assign-devicename.at:54"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/assign-devicename.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/assign-devicename.at:55: java prog"
at_fn_check_prepare_trace "assign-devicename.at:55"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK.     " | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/assign-devicename.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_75
#AT_START_76
at_fn_group_banner 76 'assign-devicename.at:59' \
  "ASSIGN coded device name by env.var" "            "
at_xfail=no
(
  $as_echo "76. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >datafile <<'_ATEOF'
OK.
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT F01 ASSIGN TO SYS01-DA-DK-S-TEST1
                  ORGANIZATION LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD  F01.
       01  F01R         PIC X(8).
       PROCEDURE        DIVISION.
           OPEN INPUT F01.
           READ F01.
           DISPLAY F01R WITH NO ADVANCING.
           CLOSE F01.
_ATEOF


{ set +x
$as_echo "$at_srcdir/assign-devicename.at:83: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "assign-devicename.at:83"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/assign-devicename.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/assign-devicename.at:84: TEST1=datafile java prog"
at_fn_check_prepare_trace "assign-devicename.at:84"
( $at_check_trace; TEST1=datafile java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK.     " | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/assign-devicename.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_76
#AT_START_77
at_fn_group_banner 77 'assign-devicename.at:88' \
  "ASSIGN coded device w/o def.name by env.var" "    "
at_xfail=no
(
  $as_echo "77. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >datafile <<'_ATEOF'
OK.
_ATEOF


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT F01 ASSIGN TO SYS01-DA-DK-S
                  ORGANIZATION LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD  F01.
       01  F01R         PIC X(8).
       PROCEDURE        DIVISION.
           OPEN INPUT F01.
           READ F01.
           DISPLAY F01R WITH NO ADVANCING.
           CLOSE F01.
_ATEOF


{ set +x
$as_echo "$at_srcdir/assign-devicename.at:112: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "assign-devicename.at:112"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/assign-devicename.at:112"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/assign-devicename.at:113: SYS01=datafile java prog"
at_fn_check_prepare_trace "assign-devicename.at:113"
( $at_check_trace; SYS01=datafile java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "OK.     " | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/assign-devicename.at:113"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_77
#AT_START_78
at_fn_group_banner 78 'job-date.at:1' \
  "COB_DATE" "                                       "
at_xfail=no
(
  $as_echo "78. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  DATE-YMD.
         03  DATE-YY PIC X(2).
         03  DATE-MM PIC X(2).
         03  DATE-DD PIC X(2).
       PROCEDURE        DIVISION.
           ACCEPT DATE-YMD FROM DATE.
           DISPLAY DATE-YMD.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/job-date.at:18: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "job-date.at:18"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:18"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/job-date.at:19: COB_DATE=1970/01/02 java prog"
at_fn_check_prepare_trace "job-date.at:19"
( $at_check_trace; COB_DATE=1970/01/02 java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "700102
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:19"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_78
#AT_START_79
at_fn_group_banner 79 'job-date.at:25' \
  "COB_DATE YYYYMMDD" "                              "
at_xfail=no
(
  $as_echo "79. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  DATE-YMD.
         03  DATE-YYYY PIC X(4).
         03  DATE-MM   PIC X(2).
         03  DATE-DD   PIC X(2).
       PROCEDURE        DIVISION.
           ACCEPT DATE-YMD FROM DATE YYYYMMDD.
           DISPLAY DATE-YMD.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/job-date.at:42: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "job-date.at:42"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/job-date.at:43: COB_DATE=1970/01/02 java prog"
at_fn_check_prepare_trace "job-date.at:43"
( $at_check_trace; COB_DATE=1970/01/02 java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "19700102
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:43"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_79
#AT_START_80
at_fn_group_banner 80 'job-date.at:48' \
  "COB_DATE DAY" "                                   "
at_xfail=no
(
  $as_echo "80. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  DAY-YD.
         03  DAY-YY PIC X(2).
         03  DAY-DD PIC X(3).
       PROCEDURE        DIVISION.
           ACCEPT DAY-YD FROM DAY.
           DISPLAY DAY-YD.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/job-date.at:64: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "job-date.at:64"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/job-date.at:65: COB_DATE=1970/02/01 java prog"
at_fn_check_prepare_trace "job-date.at:65"
( $at_check_trace; COB_DATE=1970/02/01 java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "70032
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_80
#AT_START_81
at_fn_group_banner 81 'job-date.at:70' \
  "COB_DATE DAY YYYYDDD" "                           "
at_xfail=no
(
  $as_echo "81. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  DAY-YD.
         03  DAY-YYYY PIC X(4).
         03  DAY-DD   PIC X(3).
       PROCEDURE        DIVISION.
           ACCEPT DAY-YD FROM DAY YYYYDDD.
           DISPLAY DAY-YD.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/job-date.at:86: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "job-date.at:86"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/job-date.at:87: COB_DATE=1970/02/01 java prog"
at_fn_check_prepare_trace "job-date.at:87"
( $at_check_trace; COB_DATE=1970/02/01 java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1970032
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:87"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_81
#AT_START_82
at_fn_group_banner 82 'job-date.at:92' \
  "COB_DATE FUNC. CURRENT-DATE" "                    "
at_xfail=no
(
  $as_echo "82. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  CURR-DATE.
         03  CURR-YYYY PIC X(4).
         03  CURR-MM   PIC X(2).
         03  CURR-DD   PIC X(2).
         03  FILLER    PIC X(13).
       PROCEDURE        DIVISION.
           MOVE FUNCTION CURRENT-DATE TO CURR-DATE.
           DISPLAY CURR-YYYY CURR-MM CURR-DD.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/job-date.at:110: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "job-date.at:110"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:110"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/job-date.at:111: COB_DATE=1970/01/02 java prog"
at_fn_check_prepare_trace "job-date.at:111"
( $at_check_trace; COB_DATE=1970/01/02 java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "19700102
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:111"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_82
#AT_START_83
at_fn_group_banner 83 'job-date.at:116' \
  "COB_DATE FUNC. CURRENT-DATE of time" "            "
at_xfail=no
(
  $as_echo "83. $at_setup_line: testing $at_desc ..."
  $at_traceon


{ set +x
$as_echo "$at_srcdir/job-date.at:118: test \$SHREXT != \"dll\" || exit 77"
at_fn_check_prepare_dynamic "test $SHREXT != \"dll\" || exit 77" "job-date.at:118"
( $at_check_trace; test $SHREXT != "dll" || exit 77
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:118"
$at_failed && at_fn_log_failure
$at_traceon; }


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  CURR-DATE.
         03  CURR-YYYY PIC 9(4).
         03  CURR-MM   PIC 9(2).
         03  CURR-DD   PIC 9(2).
         03  CURR-H    PIC 9(2).
         03  CURR-M    PIC 9(2).
         03  CURR-S    PIC 9(2).
         03  FILLER    PIC X(7).
       01 CMDLN.
         03  CMDLN-CMD  PIC X(18) VALUE 'expr \( `date +%s`';
         03  FILLER     PIC X(3)  VALUE ' - ';
         03  CMDLN-DT1  PIC X(8)  VALUE '`date -d';
         03  FILLER     PIC X(1)  VALUE "'";
         03  CMDLN-YYYY PIC 9(4);
         03  FILLER     PIC X(1)  VALUE '-';
         03  CMDLN-MM   PIC 9(2);
         03  FILLER     PIC X(1)  VALUE '-';
         03  CMDLN-DD   PIC 9(2);
         03  FILLER     PIC X(1)  VALUE ' ';
         03  CMDLN-H    PIC 9(2);
         03  FILLER     PIC X(1)  VALUE ':';
         03  CMDLN-M    PIC 9(2);
         03  FILLER     PIC X(1)  VALUE ':';
         03  CMDLN-S    PIC 9(2);
         03  FILLER     PIC X(1)  VALUE "'";
         03  CMDLN_DT2  PIC X(13) VALUE ' +%s` \) / 2';
       PROCEDURE        DIVISION.
           MOVE FUNCTION CURRENT-DATE TO CURR-DATE.
           MOVE CURR-YYYY TO CMDLN-YYYY.
           MOVE CURR-MM   TO CMDLN-MM.
           MOVE CURR-DD   TO CMDLN-DD.
           MOVE CURR-H    TO CMDLN-H.
           MOVE CURR-M    TO CMDLN-M.
           MOVE CURR-S    TO CMDLN-S.
           CALL "SYSTEM" USING CMDLN.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/job-date.at:163: \${COMPILE_JP_COMPAT} -o prog prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "job-date.at:163"
( $at_check_trace; ${COMPILE_JP_COMPAT} -o prog prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:163"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/job-date.at:164: COB_DATE=\`date +%Y/%m/%d\` java prog"
at_fn_check_prepare_notrace 'a `...` command substitution' "job-date.at:164"
( $at_check_trace; COB_DATE=`date +%Y/%m/%d` java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "0
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/job-date.at:164"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_83
#AT_START_84
at_fn_group_banner 84 'nibble-c-for-unsigned.at:1' \
  "Decimal nibble C as unsigned" "                   "
at_xfail=no
(
  $as_echo "84. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  UNI01.
         03 SIGNED01.
           05 SDEC01 PIC S9(2) COMP-3.
         03 UNSIGNED01 REDEFINES SIGNED01.
           05 UDEC01 PIC  9(2) COMP-3.
       PROCEDURE        DIVISION.
           MOVE 1 TO SDEC01.
           IF SDEC01 IS NUMERIC THEN
               DISPLAY "S" WITH NO ADVANCING
           END-IF.
           IF UDEC01 IS NUMERIC THEN
               DISPLAY "U" WITH NO ADVANCING
           END-IF.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/nibble-c-for-unsigned.at:24: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "nibble-c-for-unsigned.at:24"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/nibble-c-for-unsigned.at:24"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/nibble-c-for-unsigned.at:25: java prog"
at_fn_check_prepare_trace "nibble-c-for-unsigned.at:25"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "S" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/nibble-c-for-unsigned.at:25"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/nibble-c-for-unsigned.at:26: COB_NIBBLE_C_UNSIGNED=Y java prog"
at_fn_check_prepare_trace "nibble-c-for-unsigned.at:26"
( $at_check_trace; COB_NIBBLE_C_UNSIGNED=Y java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "SU" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/nibble-c-for-unsigned.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_84
#AT_START_85
at_fn_group_banner 85 'upsi-x.at:1' \
  "UPSI-x" "                                         "
at_xfail=no
(
  $as_echo "85. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           UPSI-0 IS SWIT1
             ON IS SWIT1-ON
             OFF IS SWIT1-OFF
           UPSI-1 IS SWIT2
             ON IS SWIT2-ON
             OFF IS SWIT2-OFF.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
           IF SWIT1-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           IF SWIT2-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           SET SWIT1 TO OFF.
           SET SWIT2 TO ON.
           IF SWIT1-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           IF SWIT2-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/upsi-x.at:51: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "upsi-x.at:51"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/upsi-x.at:51"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/upsi-x.at:52: COB_SWITCH_1=ON COB_SWITCH_2=OFF java prog"
at_fn_check_prepare_trace "upsi-x.at:52"
( $at_check_trace; COB_SWITCH_1=ON COB_SWITCH_2=OFF java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ONOFFOFFON" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/upsi-x.at:52"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_85
#AT_START_86
at_fn_group_banner 86 'cob68-copy.at:1' \
  "COBOL68 COPY" "                                   "
at_xfail=no
(
  $as_echo "86. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       01 X-NN.
           03 X-11 PIC X VALUE 'A'.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


{ set +x
$as_echo "$at_srcdir/cob68-copy.at:21: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "cob68-copy.at:21"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:21"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/cob68-copy.at:22: java prog"
at_fn_check_prepare_trace "cob68-copy.at:22"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ABC" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_86
#AT_START_87
at_fn_group_banner 87 'cob68-copy.at:25' \
  "COBOL68 COPY nested" "                            "
at_xfail=no
(
  $as_echo "87. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       01 X-N1 COPY inc2.
_ATEOF


cat >inc2.cpy <<'_ATEOF'

       01 X-N2.
           03 X-11 PIC X VALUE 'A'.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


{ set +x
$as_echo "$at_srcdir/cob68-copy.at:49: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "cob68-copy.at:49"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:49"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/cob68-copy.at:50: java prog"
at_fn_check_prepare_trace "cob68-copy.at:50"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ABC" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:50"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_87
#AT_START_88
at_fn_group_banner 88 'cob68-copy.at:53' \
  "COBOL68 COPY nested fragments" "                  "
at_xfail=no
(
  $as_echo "88. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       01 X-N1 COPY inc2.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


cat >inc2.cpy <<'_ATEOF'

       01 X-N2.
           03 X-11 PIC X VALUE 'A'.
_ATEOF


{ set +x
$as_echo "$at_srcdir/cob68-copy.at:77: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "cob68-copy.at:77"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:77"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/cob68-copy.at:78: java prog"
at_fn_check_prepare_trace "cob68-copy.at:78"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ABC" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_88
#AT_START_89
at_fn_group_banner 89 'cob68-copy.at:81' \
  "COBOL68 COPY nested w/ normal" "                  "
at_xfail=no
(
  $as_echo "89. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       COPY inc2.
_ATEOF


cat >inc2.cpy <<'_ATEOF'

       01 X-N2.
           03 X-11 PIC X VALUE 'A'.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


{ set +x
$as_echo "$at_srcdir/cob68-copy.at:105: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "cob68-copy.at:105"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:105"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/cob68-copy.at:106: java prog"
at_fn_check_prepare_trace "cob68-copy.at:106"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ABC" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:106"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_89
#AT_START_90
at_fn_group_banner 90 'cob68-copy.at:109' \
  "COBOL68 COPY nested w/ normal 2" "                "
at_xfail=no
(
  $as_echo "90. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 COPY inc1.
       PROCEDURE        DIVISION.
           DISPLAY X-01 WITH NO ADVANCING.
          GOBACK.
_ATEOF


cat >inc1.cpy <<'_ATEOF'

       01 X-N2.
       COPY inc2.
_ATEOF


cat >inc2.cpy <<'_ATEOF'

           03 X-11 PIC X VALUE 'A'.
           03 X-12 PIC X VALUE 'B'.
           03 X-13 PIC X VALUE 'C'.
_ATEOF


{ set +x
$as_echo "$at_srcdir/cob68-copy.at:133: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "cob68-copy.at:133"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:133"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/cob68-copy.at:134: java prog"
at_fn_check_prepare_trace "cob68-copy.at:134"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ABC" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/cob68-copy.at:134"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_90
#AT_START_91
at_fn_group_banner 91 'switch-no-mnemonic.at:1' \
  "SWITCH-x with no mnemonic name" "                 "
at_xfail=no
(
  $as_echo "91. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           SWITCH-1
             ON IS SWIT1-ON
             OFF IS SWIT1-OFF
           SWITCH-2
             ON IS SWIT2-ON
             OFF IS SWIT2-OFF.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
           IF SWIT1-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           IF SWIT2-ON
              DISPLAY "ON" NO ADVANCING
              END-DISPLAY
           ELSE
              DISPLAY "OFF" NO ADVANCING
              END-DISPLAY
           END-IF.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/switch-no-mnemonic.at:35: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "switch-no-mnemonic.at:35"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/switch-no-mnemonic.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/switch-no-mnemonic.at:36: COB_SWITCH_1=ON COB_SWITCH_2=OFF java prog"
at_fn_check_prepare_trace "switch-no-mnemonic.at:36"
( $at_check_trace; COB_SWITCH_1=ON COB_SWITCH_2=OFF java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ONOFF" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/switch-no-mnemonic.at:36"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_91
#AT_START_92
at_fn_group_banner 92 'data-desc-no-dot.at:1' \
  "Data description unterminated" "                  "
at_xfail=no
(
  $as_echo "92. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC X VALUE "A"
       01 X-02 PIC X
       PROCEDURE        DIVISION.
           MOVE "B" TO X-02.
           DISPLAY X-01 X-02 WITH NO ADVANCING.
          GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/data-desc-no-dot.at:16: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "data-desc-no-dot.at:16"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/data-desc-no-dot.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/data-desc-no-dot.at:17: java prog"
at_fn_check_prepare_trace "data-desc-no-dot.at:17"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "AB" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/data-desc-no-dot.at:17"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_92
#AT_START_93
at_fn_group_banner 93 'data-desc-no-dot.at:20' \
  "Data desc. ambiguous level-num 1" "               "
at_xfail=no
(
  $as_echo "93. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC 9 VALUE 03
       01 X-02 PIC 9
       PROCEDURE        DIVISION.
           MOVE 4 TO X-02.
           DISPLAY X-01 X-02 WITH NO ADVANCING.
          GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/data-desc-no-dot.at:35: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "data-desc-no-dot.at:35"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/data-desc-no-dot.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/data-desc-no-dot.at:36: java prog"
at_fn_check_prepare_trace "data-desc-no-dot.at:36"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "34" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/data-desc-no-dot.at:36"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_93
#AT_START_94
at_fn_group_banner 94 'data-desc-no-dot.at:39' \
  "Data desc. ambiguous level-num 2" "               "
at_xfail=no
(
  $as_echo "94. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC 9 VALUE
       03
       01 X-02 PIC 9
       PROCEDURE        DIVISION.
           MOVE 4 TO X-02.
           DISPLAY X-01 X-02 WITH NO ADVANCING.
          GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/data-desc-no-dot.at:55: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "data-desc-no-dot.at:55"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/data-desc-no-dot.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/data-desc-no-dot.at:56: java prog"
at_fn_check_prepare_trace "data-desc-no-dot.at:56"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "34" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/data-desc-no-dot.at:56"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_94
#AT_START_95
at_fn_group_banner 95 'data-desc-no-dot.at:59' \
  "Data desc. level-num error after 88" "            "
at_xfail=no
(
  $as_echo "95. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC 9
          88 V-01 VALUES 01
       02
       03.
       01 X-02 PIC 9
       01 X-03 PIC 9
          88 V-03 VALUES 01 02 03
       01 X-04 PIC 9
       PROCEDURE        DIVISION.
          GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/data-desc-no-dot.at:78: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "data-desc-no-dot.at:78"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:10: Error: syntax error, unexpected Identifier, expecting end of file or FUNCTION-ID or PROGRAM-ID
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/data-desc-no-dot.at:78"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_95
#AT_START_96
at_fn_group_banner 96 'data-desc-no-dot.at:83' \
  "Data desc. ambiguous level-num (degrade check)" " "
at_xfail=no
(
  $as_echo "96. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X-01 PIC 9. 01
       X-02 PIC 9.
       PROCEDURE        DIVISION.
          GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/data-desc-no-dot.at:96: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "data-desc-no-dot.at:96"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/data-desc-no-dot.at:96"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_96
#AT_START_97
at_fn_group_banner 97 'sort-key-is.at:1' \
  "SORT KEY IS" "                                    "
at_xfail=no
(
  $as_echo "97. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
           SELECT SF01 ASSIGN TO "SFILE".
           SELECT IF01 ASSIGN TO "IFILE".
           SELECT OF01 ASSIGN TO "OFILE".
       DATA             DIVISION.
       FILE             SECTION.
       SD  SF01.
       01  A00.
         02 A001        PIC X(6).
       FD  IF01.
       01  I-A00.
         02 I-A001        PIC X(6).
       FD  OF01.
       01  O-A00.
         02 O-A001        PIC X(6).
       PROCEDURE        DIVISION.
           SORT SF01 ASCENDING KEY IS A001
                USING IF01 GIVING OF01.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/sort-key-is.at:29: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "sort-key-is.at:29"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:23: Error: syntax error
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/sort-key-is.at:29"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/sort-key-is.at:32: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "sort-key-is.at:32"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/sort-key-is.at:32"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_97
#AT_START_98
at_fn_group_banner 98 'search-key-in-rhs.at:1' \
  "SEARCH KEY IN RHS" "                              "
at_xfail=no
(
  $as_echo "98. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  WK00.
         03 TBL00 OCCURS 5 TIMES
                  ASCENDING KEY D0001
                  INDEXED BY    TBL00-IDX.
           05 D0001         PIC 9(4).
           05 D0002         PIC X(4).
       77  CNT00            PIC 9(4).
       PROCEDURE        DIVISION.
           MOVE 1 TO D0001(1).
           MOVE 2 TO D0001(2).
           MOVE 3 TO D0001(3).
           MOVE 4 TO D0001(4).
           MOVE 5 TO D0001(5).
           MOVE "VAL1" TO D0002(1).
           MOVE "VAL2" TO D0002(2).
           MOVE "VAL3" TO D0002(3).
           MOVE "VAL4" TO D0002(4).
           MOVE "VAL5" TO D0002(5).
           MOVE 3 TO CNT00.
           SEARCH ALL TBL00 WHEN CNT00 = D0001(TBL00-IDX)
               DISPLAY D0002(TBL00-IDX) WITH NO ADVANCING
           END-SEARCH.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/search-key-in-rhs.at:33: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "search-key-in-rhs.at:33"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search-key-in-rhs.at:33"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/search-key-in-rhs.at:34: java prog"
at_fn_check_prepare_trace "search-key-in-rhs.at:34"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "VAL3" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/search-key-in-rhs.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_98
#AT_START_99
at_fn_group_banner 99 'verbose-runtime.at:1' \
  "COB_VERBOSE file sort" "                          "
at_xfail=no
(
  $as_echo "99. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT SORT-FILE1 ASSIGN TO "S01"
               ORGANIZATION SEQUENTIAL.
           SELECT INPUT-FILE1  ASSIGN TO "./input.txt".
           SELECT OUTPUT-FILE1 ASSIGN TO "./output.txt".
       DATA                 DIVISION.
       FILE		    SECTION.
       SD SORT-FILE1.
       01 SORT-REC1.
          02 SORT-KEY1  PIC XX.
          02 SORT-DATA1 PIC XX.
       FD INPUT-FILE1.
       01 INPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       FD OUTPUT-FILE1.
       01 OUTPUT-REC1.
          02 XFLD1   PIC X(2).
          02 XFLD2   PIC X(2).
       PROCEDURE            DIVISION.
          SORT SORT-FILE1 ON ASCENDING KEY SORT-KEY1
             USING INPUT-FILE1
             GIVING OUTPUT-FILE1.
          GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/verbose-runtime.at:34: echo -n 11CC33AA22BB >input.txt"
at_fn_check_prepare_trace "verbose-runtime.at:34"
( $at_check_trace; echo -n 11CC33AA22BB >input.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/verbose-runtime.at:34"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/verbose-runtime.at:35: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "verbose-runtime.at:35"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/verbose-runtime.at:35"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/verbose-runtime.at:36: COB_VERBOSE=Y java prog"
at_fn_check_prepare_trace "verbose-runtime.at:36"
( $at_check_trace; COB_VERBOSE=Y java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "libcob: END OF SORT/MERGE, RECORD= 3.
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/verbose-runtime.at:36"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_99
#AT_START_100
at_fn_group_banner 100 'occurs-param-order.at:1' \
  "OCCURS INDEXED before KEY" "                      "
at_xfail=no
(
  $as_echo "100. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X.
         03 XX OCCURS 10
                 INDEXED       BY I01
                 ASCENDING KEY IS X01.
           05 X01 PIC 9.
           05 X02 PIC X.
_ATEOF


{ set +x
$as_echo "$at_srcdir/occurs-param-order.at:16: \${COMPILE_ONLY} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "occurs-param-order.at:16"
( $at_check_trace; ${COMPILE_ONLY} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/occurs-param-order.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_100
#AT_START_101
at_fn_group_banner 101 'io-control.at:1' \
  "I-O-CONTROL clauses unterminated" "               "
at_xfail=no
(
  $as_echo "101. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
           SELECT F01 ASSIGN "TEST-FILE".
           SELECT F02 ASSIGN "TEST-FILE2".
       I-O-CONTROL.
          SAME RECORD AREA FOR F01 F02
       DATA             DIVISION.
       FILE             SECTION.
       FD F01.
       01 TEST-RECORD.
         03 TEST-KEY    PIC 9(10).
       FD F02.
       01 TEST-RECORD2.
         03 TEST-KEY2   PIC 9(10).
_ATEOF


{ set +x
$as_echo "$at_srcdir/io-control.at:23: \${COMPILE_ONLY} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "io-control.at:23"
( $at_check_trace; ${COMPILE_ONLY} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/io-control.at:23"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_101
#AT_START_102
at_fn_group_banner 102 'io-control.at:27' \
  "APPLY Clauses (not supported)" "                  "
at_xfail=no
(
  $as_echo "102. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION       DIVISION.
       PROGRAM-ID.          prog.
       ENVIRONMENT          DIVISION.
       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
           SELECT FILE1  ASSIGN TO "file1".
       I-O-CONTROL.
           APPLY FORMS-OVERLAY TO FMS-OVL   ON FILE1.
           APPLY CLOSE-NOFEED               ON FILE1.
           APPLY COMMITMENT-CONTROL         ON FILE1.
           APPLY CORE-INDEX    TO CORE-IDX  ON FILE1.
           APPLY CYL-OVERFLOW  OF 10 TRACKS ON FILE1.
       DATA                 DIVISION.
       WORKING-STORAGE      SECTION.
       01 FMS-OVL   PIC X(8).
       01 CORE-IDX  PIC X(4).
_ATEOF


{ set +x
$as_echo "$at_srcdir/io-control.at:48: \${COMPILE_ONLY} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "io-control.at:48"
( $at_check_trace; ${COMPILE_ONLY} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:9: Warning: 'APPLY FORMS-OVERLAY' not implemented
prog.cob:10: Warning: 'APPLY CLOSE-NOFEED' not implemented
prog.cob:11: Warning: 'APPLY COMMITMENT-CONTROL' not implemented
prog.cob:12: Warning: 'APPLY CORE-INDEX' not implemented
prog.cob:13: Warning: 'APPLY CYL-OVERFLOW' not implemented
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/io-control.at:48"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_102
#AT_START_103
at_fn_group_banner 103 'greater-less-than-equal.at:1' \
  "GREATER/LESS THAN (implicit 'OR') EQUAL" "        "
at_xfail=no
(
  $as_echo "103. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       PROCEDURE        DIVISION.
           IF 1 GREATER THAN EQUAL 1 THEN
               DISPLAY "GE OK"
           END-IF.
           IF 1 LESS THAN EQUAL 1 THEN
               DISPLAY "LE OK"
           END-IF.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/greater-less-than-equal.at:16: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "greater-less-than-equal.at:16"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/greater-less-than-equal.at:16"
$at_failed && at_fn_log_failure
$at_traceon; }


{ set +x
$as_echo "$at_srcdir/greater-less-than-equal.at:18: java prog"
at_fn_check_prepare_trace "greater-less-than-equal.at:18"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "GE OK
LE OK
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/greater-less-than-equal.at:18"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_103
#AT_START_104
at_fn_group_banner 104 'file-desc.at:1' \
  "ignore invalid (too short) RECORD CONTAINS " "    "
at_xfail=no
(
  $as_echo "104. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE".
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE  RECORD CONTAINS 2.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN OUTPUT TEST-FILE.
           MOVE  ALL "A" TO TEST-REC.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-desc.at:22: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-desc.at:22"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:12: Error: Record size too large 'TEST-REC' (4)
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/file-desc.at:22"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-desc.at:25: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-desc.at:25"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-desc.at:25"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-desc.at:26: java prog"
at_fn_check_prepare_trace "file-desc.at:26"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-desc.at:26"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-desc.at:27: od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *\$//'"
at_fn_check_prepare_notrace 'a shell pipeline' "file-desc.at:27"
( $at_check_trace; od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *$//'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo " 41 41 41 41
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-desc.at:27"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_104
#AT_START_105
at_fn_group_banner 105 'file-desc.at:32' \
  "ignore invalid (too large) RECORD CONTAINS " "    "
at_xfail=no
(
  $as_echo "105. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN "TEST-FILE".
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE  RECORD CONTAINS 8.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN OUTPUT TEST-FILE.
           MOVE  ALL "A" TO TEST-REC.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/file-desc.at:53: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-desc.at:53"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-desc.at:53"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-desc.at:54: java prog"
at_fn_check_prepare_trace "file-desc.at:54"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-desc.at:54"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-desc.at:55: od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *\$//'"
at_fn_check_prepare_notrace 'a shell pipeline' "file-desc.at:55"
( $at_check_trace; od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *$//'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo " 00 04 00 00 41 41 41 41
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-desc.at:55"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-desc.at:57: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "file-desc.at:57"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-desc.at:57"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-desc.at:58: java prog"
at_fn_check_prepare_trace "file-desc.at:58"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-desc.at:58"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/file-desc.at:59: od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *\$//'"
at_fn_check_prepare_notrace 'a shell pipeline' "file-desc.at:59"
( $at_check_trace; od -An -tx1 TEST-FILE | sed -e 's/  */ /g' -e 's/ *$//'
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo " 41 41 41 41
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/file-desc.at:59"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_105
#AT_START_106
at_fn_group_banner 106 'abort-on-file-error.at:1' \
  "Abort option (default) on non-fatal f-status" "   "
at_xfail=no
(
  $as_echo "106. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION  INDEXED
                        ACCESS MODE   DYNAMIC
                        RECORD KEY TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY   PIC X(4).
          03 TEST-DAT1  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY.
           MOVE "+AOK" TO TEST-DAT1.
           WRITE TEST-REC.
           MOVE "-DUP" TO TEST-DAT1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/abort-on-file-error.at:30: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "abort-on-file-error.at:30"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/abort-on-file-error.at:30"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/abort-on-file-error.at:31: java prog >& /dev/null"
at_fn_check_prepare_trace "abort-on-file-error.at:31"
( $at_check_trace; java prog >& /dev/null
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/abort-on-file-error.at:31"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_106
#AT_START_107
at_fn_group_banner 107 'abort-on-file-error.at:35' \
  "Abort option (fatal) on non-fatal f-status" "     "
at_xfail=no
(
  $as_echo "107. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "./TEST-FILE"
                        ORGANIZATION  INDEXED
                        ACCESS MODE   DYNAMIC
                        RECORD KEY TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY   PIC X(4).
          03 TEST-DAT1  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT TEST-FILE.
           MOVE "0001" TO TEST-KEY.
           MOVE "+AOK" TO TEST-DAT1.
           WRITE TEST-REC.
           MOVE "-DUP" TO TEST-DAT1.
           WRITE TEST-REC.
           CLOSE TEST-FILE.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/abort-on-file-error.at:64: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "abort-on-file-error.at:64"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/abort-on-file-error.at:64"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/abort-on-file-error.at:65: java prog"
at_fn_check_prepare_trace "abort-on-file-error.at:65"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/abort-on-file-error.at:65"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_107
#AT_START_108
at_fn_group_banner 108 'abort-on-file-error.at:69' \
  "Abort option (default) on fatal f-status" "       "
at_xfail=no
(
  $as_echo "108. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "nowhere"
                        ORGANIZATION  INDEXED
                        ACCESS MODE   DYNAMIC
                        RECORD KEY TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY   PIC X(4).
          03 TEST-DAT1  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  INPUT TEST-FILE.
           CLOSE TEST-FILE.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/abort-on-file-error.at:93: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "abort-on-file-error.at:93"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/abort-on-file-error.at:93"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/abort-on-file-error.at:94: java prog"
at_fn_check_prepare_trace "abort-on-file-error.at:94"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:18: libcob: File does not exist (STATUS = 35) File : 'nowhere'
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/abort-on-file-error.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_108
#AT_START_109
at_fn_group_banner 109 'abort-on-file-error.at:100' \
  "Abort option (fatal) on fatal file status" "      "
at_xfail=no
(
  $as_echo "109. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN TO "nowhere"
                        ORGANIZATION  INDEXED
                        ACCESS MODE   DYNAMIC
                        RECORD KEY TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC.
          03 TEST-KEY   PIC X(4).
          03 TEST-DAT1  PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  INPUT TEST-FILE.
           CLOSE TEST-FILE.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/abort-on-file-error.at:124: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "abort-on-file-error.at:124"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/abort-on-file-error.at:124"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/abort-on-file-error.at:125: java prog"
at_fn_check_prepare_trace "abort-on-file-error.at:125"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:18: libcob: File does not exist (STATUS = 35) File : 'nowhere'
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/abort-on-file-error.at:125"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_109
#AT_START_110
at_fn_group_banner 110 'system-routine.at:1' \
  "CALL C\$CALLEDBY" "                                "
at_xfail=no
(
  $as_echo "110. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >callee.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      callee.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 PROG-NAME     PIC X(30).
       01 RET-CODE      PIC 9.
       PROCEDURE        DIVISION.
           CALL "C$CALLEDBY" USING  PROG-NAME
                             GIVING RET-CODE
           END-CALL.
           DISPLAY PROG-NAME RET-CODE
           END-DISPLAY.
           EXIT PROGRAM.
_ATEOF


cat >caller.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      caller.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 PROG-NAME     PIC X(30).
       01 RET-CODE      PIC 9.
       PROCEDURE        DIVISION.
           CALL "callee"
           END-CALL.
           CALL "C$CALLEDBY" USING  PROG-NAME
                             GIVING RET-CODE
           END-CALL.
           DISPLAY PROG-NAME RET-CODE
           END-DISPLAY.
           STOP RUN.
_ATEOF


{ set +x
$as_echo "$at_srcdir/system-routine.at:37: \${COMPILE} caller.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "system-routine.at:37"
( $at_check_trace; ${COMPILE} caller.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:37"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/system-routine.at:38: \${COMPILE_MODULE} callee.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "system-routine.at:38"
( $at_check_trace; ${COMPILE_MODULE} callee.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:38"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/system-routine.at:39: ./caller"
at_fn_check_prepare_trace "system-routine.at:39"
( $at_check_trace; ./caller
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "caller                        1
                              0
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:39"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_110
#AT_START_111
at_fn_group_banner 111 'system-routine.at:45' \
  "CALL C\$LIST-DIRECTORY" "                          "
at_xfail=no
(
  $as_echo "111. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  PATTERN       PIC X(5) VALUE "*".
       01  DIRECTORY     PIC X(256) VALUE
       "./list".
       01  FILENAME      PIC X(30).
       01  MYDIR         PIC 9(8) COMP-5.
       PROCEDURE        DIVISION.
           CALL "C$LIST-DIRECTORY" USING 1,
                                         DIRECTORY,
                                         PATTERN
           END-CALL.
           MOVE RETURN-CODE TO MYDIR.
           CALL "C$LIST-DIRECTORY" USING 2,
                                         MYDIR,
                                         FILENAME
           END-CALL.
           PERFORM WITH TEST AFTER UNTIL FILENAME = SPACES
             DISPLAY FUNCTION TRIM(FILENAME)
             CALL "C$LIST-DIRECTORY" USING 2,
                                           MYDIR,
                                           FILENAME
             END-CALL
           END-PERFORM.
           CALL "C$LIST-DIRECTORY" USING 3, MYDIR
           END-CALL.
           MOVE 0           TO RETURN-CODE.
           EXIT PROGRAM.
_ATEOF


{ set +x
$as_echo "$at_srcdir/system-routine.at:80: mkdir list"
at_fn_check_prepare_trace "system-routine.at:80"
( $at_check_trace; mkdir list
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:80"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/system-routine.at:81: echo -n 1 >list/input1.txt"
at_fn_check_prepare_trace "system-routine.at:81"
( $at_check_trace; echo -n 1 >list/input1.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:81"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/system-routine.at:82: echo -n 1 >list/input2.txt"
at_fn_check_prepare_trace "system-routine.at:82"
( $at_check_trace; echo -n 1 >list/input2.txt
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:82"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/system-routine.at:83: ls -1f list > list1"
at_fn_check_prepare_trace "system-routine.at:83"
( $at_check_trace; ls -1f list > list1
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:83"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/system-routine.at:84: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "system-routine.at:84"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:84"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/system-routine.at:85: java prog > list2"
at_fn_check_prepare_trace "system-routine.at:85"
( $at_check_trace; java prog > list2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:85"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/system-routine.at:86: diff list1 list2"
at_fn_check_prepare_trace "system-routine.at:86"
( $at_check_trace; diff list1 list2
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/system-routine.at:86"
$at_failed && at_fn_log_failure
$at_traceon; }

  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_111
#AT_START_112
at_fn_group_banner 112 'catch-exception.at:3' \
  "Divide by zero: by '0' - option yes" "            "
at_xfail=no
(
  $as_echo "112. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC 9.
       PROCEDURE        DIVISION.
           MOVE 1 TO X.
           DIVIDE X BY 0 GIVING X.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/catch-exception.at:17: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "catch-exception.at:17"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:9: Error: Detected division by zero.
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/catch-exception.at:17"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_112
#AT_START_113
at_fn_group_banner 113 'catch-exception.at:26' \
  "Divide by zero: by '0' - option no" "             "
at_xfail=no
(
  $as_echo "113. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC 9.
       PROCEDURE        DIVISION.
           MOVE 1 TO X.
           DIVIDE X BY 0 GIVING X.
           DISPLAY X.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/catch-exception.at:41: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "catch-exception.at:41"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:41"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/catch-exception.at:42: java prog"
at_fn_check_prepare_trace "catch-exception.at:42"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:42"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_113
#AT_START_114
at_fn_group_banner 114 'catch-exception.at:51' \
  "Divide by zero: by variable - option yes" "       "
at_xfail=no
(
  $as_echo "114. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC 9.
       01 Y             PIC 9.
       PROCEDURE        DIVISION.
           MOVE 1 TO X.
           MOVE 0 TO Y.
           DIVIDE X BY Y GIVING X.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/catch-exception.at:67: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "catch-exception.at:67"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:67"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/catch-exception.at:68: java prog"
at_fn_check_prepare_trace "catch-exception.at:68"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:11: libcob: Detected division by zero.
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/catch-exception.at:68"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_114
#AT_START_115
at_fn_group_banner 115 'catch-exception.at:77' \
  "Divide by zero: by variable - option no" "        "
at_xfail=no
(
  $as_echo "115. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC 9.
       01 Y             PIC 9.
       PROCEDURE        DIVISION.
           MOVE 1 TO X.
           MOVE 0 TO Y.
           DIVIDE X BY Y GIVING X.
           DISPLAY X.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/catch-exception.at:94: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "catch-exception.at:94"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:94"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/catch-exception.at:95: java prog"
at_fn_check_prepare_trace "catch-exception.at:95"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:95"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_115
#AT_START_116
at_fn_group_banner 116 'catch-exception.at:103' \
  "Divide by zero: by '0' compute - option yes" "    "
at_xfail=no
(
  $as_echo "116. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC 9.
       PROCEDURE        DIVISION.
           MOVE 1 TO X.
           COMPUTE X = X / 0.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/catch-exception.at:117: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "catch-exception.at:117"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:9: Error: Detected division by zero.
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/catch-exception.at:117"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_116
#AT_START_117
at_fn_group_banner 117 'catch-exception.at:126' \
  "Divide by zero: by '0' compute - option no" "     "
at_xfail=no
(
  $as_echo "117. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC 9.
       PROCEDURE        DIVISION.
           MOVE 1 TO X.
           COMPUTE X = X / 0.
           DISPLAY X.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/catch-exception.at:141: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "catch-exception.at:141"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:141"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/catch-exception.at:142: java prog"
at_fn_check_prepare_trace "catch-exception.at:142"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:142"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_117
#AT_START_118
at_fn_group_banner 118 'catch-exception.at:151' \
  "Divide by zero: by variable compute - option yes" ""
at_xfail=no
(
  $as_echo "118. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC 9.
       01 Y             PIC 9.
       PROCEDURE        DIVISION.
           MOVE 1 TO X.
           MOVE 0 TO Y.
           COMPUTE X = X / Y.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/catch-exception.at:167: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "catch-exception.at:167"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:167"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/catch-exception.at:168: java prog"
at_fn_check_prepare_trace "catch-exception.at:168"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
echo >>"$at_stderr"; $as_echo "prog.cob:11: libcob: Detected division by zero.
" | \
  $at_diff - "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 1 $at_status "$at_srcdir/catch-exception.at:168"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_118
#AT_START_119
at_fn_group_banner 119 'catch-exception.at:177' \
  "Divide by zero: by variable compute - option no" ""
at_xfail=no
(
  $as_echo "119. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC 9.
       01 Y             PIC 9.
       PROCEDURE        DIVISION.
           MOVE 1 TO X.
           MOVE 0 TO Y.
           COMPUTE X = X / Y.
           DISPLAY X.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/catch-exception.at:194: \${COMPILE} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "catch-exception.at:194"
( $at_check_trace; ${COMPILE} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:194"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/catch-exception.at:195: java prog"
at_fn_check_prepare_trace "catch-exception.at:195"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "1
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:195"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_119
#AT_START_120
at_fn_group_banner 120 'catch-exception.at:204' \
  "Divide by zero: by variable with on size error" " "
at_xfail=no
(
  $as_echo "120. $at_setup_line: testing $at_desc ..."
  $at_traceon


cat >prog.cob <<'_ATEOF'

       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC 9.
       01 Y             PIC 9.
       PROCEDURE        DIVISION.
           MOVE 1 TO X.
           MOVE 0 TO Y.
           COMPUTE X = X / Y
             ON SIZE ERROR
                DISPLAY "ON SIZE ERROR"
           END-COMPUTE.
           GOBACK.
_ATEOF


{ set +x
$as_echo "$at_srcdir/catch-exception.at:223: \${COMPILE_JP_COMPAT} prog.cob"
at_fn_check_prepare_notrace 'a ${...} parameter expansion' "catch-exception.at:223"
( $at_check_trace; ${COMPILE_JP_COMPAT} prog.cob
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
at_fn_diff_devnull "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:223"
$at_failed && at_fn_log_failure
$at_traceon; }

{ set +x
$as_echo "$at_srcdir/catch-exception.at:224: java prog"
at_fn_check_prepare_trace "catch-exception.at:224"
( $at_check_trace; java prog
) >>"$at_stdout" 2>>"$at_stderr" 5>&-
at_status=$? at_failed=false
$at_check_filter
at_fn_diff_devnull "$at_stderr" || at_failed=:
echo >>"$at_stdout"; $as_echo "ON SIZE ERROR
" | \
  $at_diff - "$at_stdout" || at_failed=:
at_fn_check_status 0 $at_status "$at_srcdir/catch-exception.at:224"
$at_failed && at_fn_log_failure
$at_traceon; }


  set +x
  $at_times_p && times >"$at_times_file"
) 5>&1 2>&1 7>&- | eval $at_tee_pipe
read at_status <"$at_status_file"
#AT_STOP_120
