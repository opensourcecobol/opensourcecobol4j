AT_SETUP([Program name])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      ì˙ñ{åÍÇÃÉvÉçÉOÉâÉÄñº.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE} prog.cob])

AT_CLEANUP

AT_SETUP([Field name])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 ÇnÅ|ï∂éöóÒ PIC X(7) USAGE DISPLAY.
       PROCEDURE        DIVISION.
           MOVE "Unicode" TO ÇnÅ|ï∂éöóÒ.
           DISPLAY ÇnÅ|ï∂éöóÒ WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([${COMPILE} prog.cob])
AT_CHECK([java prog], [0], [Unicode])

AT_CLEANUP

AT_SETUP([Long field name])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01   çÄñ⁄Ç`ÇaÇbÇcÇdÇeÇfÇgÇOÇPÇQÇRÇS5
            PIC X(7).
       PROCEDURE        DIVISION.
           MOVE "Unicode"
             TO
           çÄñ⁄Ç`ÇaÇbÇcÇdÇeÇfÇgÇOÇPÇQÇRÇS5.
           DISPLAY
            çÄñ⁄Ç`ÇaÇbÇcÇdÇeÇfÇgÇOÇPÇQÇRÇS5
	     WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([${COMPILE} prog.cob])
AT_CHECK([java prog], [0], [Unicode])

AT_CLEANUP


AT_SETUP([Field lookup])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 çÄñ⁄ÇQ PIC X(1) VALUE "A".
       01 çÄñ⁄Çq PIC X(1) VALUE "B".
       PROCEDURE        DIVISION.
           DISPLAY çÄñ⁄ÇQ çÄñ⁄Çq WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([${COMPILE} prog.cob])
AT_CHECK([java prog], [0], [AB])

AT_CLEANUP

AT_SETUP([Section name])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
       PERFORM    ÇrÅ|èâä˙âª.
       PERFORM    ÇrÅ|èIóπ.
       ÇrÅ|èâä˙âª       SECTION.
           DISPLAY "Hello, " WITH NO ADVANCING.
       ÇrÅ|èIóπ         SECTION.
           DISPLAY "and good bye." WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([${COMPILE} prog.cob])
AT_CHECK([java prog], [0], [Hello, and good bye.])

AT_CLEANUP

AT_SETUP([Long section name])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
       PERFORM sÇPÇQÇRÇSÇTÇUÇVÇWÇXÇO1234567890.
       PERFORM    ÇrÅ|èIóπ.
       sÇPÇQÇRÇSÇTÇUÇVÇWÇXÇO1234567890 SECTION.
           DISPLAY "Hello, " WITH NO ADVANCING.
       ÇrÅ|èIóπ         SECTION.
           DISPLAY "and good bye." WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([${COMPILE} prog.cob])
AT_CHECK([java prog], [0], [Hello, and good bye.])

AT_CLEANUP

AT_SETUP([Too long section name])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       PROCEDURE        DIVISION.
       PERFORM sÇPÇQÇRÇSÇTÇUÇVÇWÇXÇO123456789012345678901.
       PERFORM    ÇrÅ|èIóπ.
       sÇPÇQÇRÇSÇTÇUÇVÇWÇXÇO123456789012345678901 SECTION.
           DISPLAY "Hello, " WITH NO ADVANCING.
       ÇrÅ|èIóπ         SECTION.
           DISPLAY "and good bye." WITH NO ADVANCING.
           STOP RUN.
])

AT_CHECK([${COMPILE} prog.cob], [1], [],
[prog.cob:7: Error: User defined name must be less than 32 characters
prog.cob:9: Error: User defined name must be less than 32 characters
])

AT_CLEANUP

AT_SETUP([Nihongo Filename])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT ÉeÉXÉgÉtÉ@ÉCÉã ASSIGN TO "./ÉeÉXÉg_ÉtÉ@ÉCÉã"
                        ORGANIZATION IS  INDEXED
                        ACCESS MODE  IS  SEQUENTIAL
                        RECORD KEY   IS  TEST-KEY.
       DATA             DIVISION.
       FILE             SECTION.
       FD ÉeÉXÉgÉtÉ@ÉCÉã.
       01 TEST-KEY      PIC X(10).
       PROCEDURE        DIVISION.
           OPEN  OUTPUT ÉeÉXÉgÉtÉ@ÉCÉã.
           MOVE "TEST000000" TO TEST-KEY.
           WRITE TEST-KEY.
           CLOSE ÉeÉXÉgÉtÉ@ÉCÉã.
           OPEN  INPUT  ÉeÉXÉgÉtÉ@ÉCÉã.
           READ  ÉeÉXÉgÉtÉ@ÉCÉã
               NOT AT END
                   DISPLAY "OK" NO ADVANCING
           END-READ.
           CLOSE ÉeÉXÉgÉtÉ@ÉCÉã.
           STOP RUN.
])

AT_CHECK([${COMPILE} prog.cob])
AT_CHECK([java prog], [0], [OK])

AT_CLEANUP

AT_SETUP([Nihongo field name in numeric test msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       numcheck.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  TEST-REC.
         03  UçÄñ⁄  PIC  9(4) VALUE  1000.
       01  XçÄñ⁄    PIC  X(4) VALUE 'ABCD'.
       PROCEDURE         DIVISION.
           MOVE XçÄñ⁄ TO TEST-REC.
           ADD 1 TO UçÄñ⁄.
           GOBACK.
])

AT_CHECK([${COMPILE} -debug prog.cob])
AT_CHECK([java prog], [1], [],
[prog.cob:11: libcob: 'UçÄñ⁄' not numeric: 'ABCD'
])

AT_CLEANUP

AT_SETUP([Nihongo field name in BASED test msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       basedcheck.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  XçÄñ⁄    PIC  X(4) VALUE 'ABCD'.
       01  YçÄñ⁄    PIC  X(4) BASED.
       PROCEDURE         DIVISION.
           MOVE XçÄñ⁄ TO YçÄñ⁄.
           GOBACK.
])

AT_CHECK([${COMPILE} -debug prog.cob])
AT_CHECK([java prog], [1], [],
[prog.cob:9: libcob: BASED/LINKAGE item 'YçÄñ⁄' has NULL address
])

AT_CLEANUP

AT_SETUP([Nihongo field name in ODO test msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       odocheck.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  IçÄñ⁄         PIC 9 VALUE 4.
       01  X.
         03  YçÄñ⁄       PIC 9 OCCURS 1 TO 3 DEPENDING ON IçÄñ⁄.
       PROCEDURE         DIVISION.
           MOVE 1 TO YçÄñ⁄(3).
           GOBACK.
])

AT_CHECK([${COMPILE} -debug prog.cob])
AT_CHECK([java prog], [1], [],
[prog.cob:10: libcob: OCCURS DEPENDING ON 'IçÄñ⁄' out of bounds: 4
])

AT_CLEANUP

AT_SETUP([Nihongo field name in Subscript test msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       odocheck.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  IçÄñ⁄         PIC 9 VALUE 2.
       01  X.
         03  YçÄñ⁄       PIC 9 OCCURS 1 TO 3 DEPENDING ON IçÄñ⁄.
       PROCEDURE         DIVISION.
           MOVE 1 TO YçÄñ⁄(3).
           GOBACK.
])

AT_CHECK([${COMPILE} -debug prog.cob])
AT_CHECK([java prog], [1], [],
[prog.cob:10: libcob: Subscript of 'YçÄñ⁄' out of bounds: 3
])

AT_CLEANUP

AT_SETUP([Nihongo field name in length of ref_mod test msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       refcheck.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  I             PIC 9    VALUE 2.
       01  J             PIC 9    VALUE 6.
       01  XçÄñ⁄         PIC X(5) VALUE "ABCDE".
       PROCEDURE         DIVISION.
           DISPLAY XçÄñ⁄(I:J).
           GOBACK.
])

AT_CHECK([${COMPILE} -debug prog.cob])
AT_CHECK([java prog], [1], [],
[prog.cob:10: libcob: Length of 'XçÄñ⁄' out of bounds: 6
])

AT_CLEANUP

AT_SETUP([Nihongo field name in offset of ref_mod test msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       refcheck.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  I             PIC 9    VALUE 6.
       01  J             PIC 9    VALUE 2.
       01  XçÄñ⁄         PIC X(5) VALUE "ABCDE".
       PROCEDURE         DIVISION.
           DISPLAY XçÄñ⁄(I:J).
           GOBACK.
])

AT_CHECK([${COMPILE} -debug prog.cob])
AT_CHECK([java prog], [1], [],
[prog.cob:10: libcob: Offset of 'XçÄñ⁄' out of bounds: 6
])

AT_CLEANUP

AT_SETUP([Nihongo field name in length of N_refmod test msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       refcheck.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  I             PIC 9    VALUE 2.
       01  J             PIC 99   VALUE 18.
       01  XçÄñ⁄         PIC N(5) VALUE "Ç`ÇaÇbÇcÇd".
       PROCEDURE         DIVISION.
           DISPLAY XçÄñ⁄(I:J).
           GOBACK.
])

AT_CHECK([${COMPILE} -debug prog.cob])
AT_CHECK([java prog], [1], [],
[prog.cob:10: libcob: Length of 'XçÄñ⁄' out of bounds: 18
])

AT_CLEANUP

AT_SETUP([Nihongo field name in offset of N_refmod test msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       refcheck.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  I             PIC 99   VALUE 18.
       01  J             PIC 9    VALUE 2.
       01  XçÄñ⁄         PIC N(5) VALUE "Ç`ÇaÇbÇcÇd".
       PROCEDURE         DIVISION.
           DISPLAY XçÄñ⁄(I:J).
           GOBACK.
])

AT_CHECK([${COMPILE} -debug prog.cob])
AT_CHECK([java prog], [1], [],
[prog.cob:10: libcob: Offset of 'XçÄñ⁄' out of bounds: 18
])

AT_CLEANUP

AT_SETUP([Nihongo field name in extaddr test msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       check1.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  XçÄñ⁄         PIC X(5) EXTERNAL.
       PROCEDURE         DIVISION.
           CALL 'check2'.

       IDENTIFICATION    DIVISION.
       PROGRAM-ID.       check2.
       DATA              DIVISION.
       WORKING-STORAGE   SECTION.
       01  XçÄñ⁄         PIC X(6) EXTERNAL.
       PROCEDURE         DIVISION.
           END PROGRAM check2.
           END PROGRAM check1.
])

AT_CHECK([${COMPILE} -debug prog.cob])
AT_CHECK([java prog], [1], [],
[prog.cob:8: libcob: EXTERNAL item 'XçÄñ⁄' has size > 6
])

AT_CLEANUP

AT_SETUP([Nihongo field name in undefined error msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 GèWícçÄñ⁄.
          03 AçÄñ⁄ PIC X.
       PROCEDURE        DIVISION.
001009     DISPLAY NO-FLD.
001010     DISPLAY NO-FLD IN G-GRP.
001011     DISPLAY NO-FLD IN NO-GRP.
001012     DISPLAY NOçÄñ⁄.
001013     DISPLAY NOçÄñ⁄ IN GèWícçÄñ⁄.
001014     DISPLAY NOçÄñ⁄ IN NOèWícçÄñ⁄.
001015     DISPLAY NO-FLD IN GèWícçÄñ⁄.
001016     DISPLAY NO-FLD IN NOèWícçÄñ⁄.
001017     DISPLAY NOçÄñ⁄ IN G-GRP.
001018     DISPLAY NOçÄñ⁄ IN NO-GRP.
001019     DISPLAY NOçÄñ⁄ IN GèWícçÄñ⁄ IN NOèWícçÄñ⁄.
])

AT_CHECK([${COMPILE} -debug prog.cob], [1], [],
[prog.cob:9: Error: 'NO-FLD' undefined
prog.cob:10: Error: 'NO-FLD' in 'G-GRP' undefined
prog.cob:11: Error: 'NO-FLD' in 'NO-GRP' undefined
prog.cob:12: Error: 'NOçÄñ⁄' undefined
prog.cob:13: Error: 'NOçÄñ⁄' in 'GèWícçÄñ⁄' undefined
prog.cob:14: Error: 'NOçÄñ⁄' in 'NOèWícçÄñ⁄' undefined
prog.cob:15: Error: 'NO-FLD' in 'GèWícçÄñ⁄' undefined
prog.cob:16: Error: 'NO-FLD' in 'NOèWícçÄñ⁄' undefined
prog.cob:17: Error: 'NOçÄñ⁄' in 'G-GRP' undefined
prog.cob:18: Error: 'NOçÄñ⁄' in 'NO-GRP' undefined
prog.cob:19: Error: 'NOçÄñ⁄' in 'GèWícçÄñ⁄' in 'NOèWícçÄñ⁄' undefined
])

AT_CLEANUP

AT_SETUP([Nihongo field name in ambiguous error msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 AçÄñ⁄ PIC X.
       01 G1èWíc.
          03 AçÄñ⁄ PIC X.
          03 BçÄñ⁄ PIC X.
          03 G2èWíc.
             05 AçÄñ⁄ PIC X.
             05 BçÄñ⁄ PIC X.
       PROCEDURE        DIVISION.
001014     DISPLAY AçÄñ⁄.
001015     DISPLAY BçÄñ⁄ IN G1èWíc.
           GOBACK.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], [],
[prog.cob:8: Warning: Redefinition of 'AçÄñ⁄'
prog.cob:6: Warning: 'AçÄñ⁄' previously defined here
prog.cob:11: Warning: Redefinition of 'AçÄñ⁄'
prog.cob:6: Warning: 'AçÄñ⁄' previously defined here
prog.cob:14: Error: 'AçÄñ⁄' ambiguous; need qualification
prog.cob:6: Error: 'AçÄñ⁄' defined here
prog.cob:8: Error: 'AçÄñ⁄' in 'G1èWíc' defined here
prog.cob:11: Error: 'AçÄñ⁄' in 'G2èWíc' in 'G1èWíc' defined here
prog.cob:15: Error: 'BçÄñ⁄' in 'G1èWíc' ambiguous; need qualification
prog.cob:9: Error: 'BçÄñ⁄' in 'G1èWíc' defined here
prog.cob:12: Error: 'BçÄñ⁄' in 'G2èWíc' in 'G1èWíc' defined here
])

AT_CLEANUP

AT_SETUP([Nihongo label name in ambiguous error msg.])
AT_CHECK([${SKIP_TEST}])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       PROCEDURE        DIVISION.
001006   L0å©èoÇµ.
001007     GO TO L1å©èoÇµ.
001008     GO TO L2å©èoÇµ IN S1êﬂ.
001009   L1å©èoÇµ. GOBACK.
001010   L1å©èoÇµ. GOBACK.
001011 S1êﬂ             SECTION.
001012   L2å©èoÇµ. GOBACK.
001013   L2å©èoÇµ. GOBACK.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], [],
[prog.cob:7: Error: 'L1å©èoÇµ' ambiguous; need qualification
prog.cob:9: Error: 'L1å©èoÇµ' in 'MAIN SECTION' defined here
prog.cob:10: Error: 'L1å©èoÇµ' in 'MAIN SECTION' defined here
prog.cob:8: Error: 'L2å©èoÇµ' in 'S1êﬂ' ambiguous; need qualification
prog.cob:12: Error: 'L2å©èoÇµ' in 'S1êﬂ' defined here
prog.cob:13: Error: 'L2å©èoÇµ' in 'S1êﬂ' defined here
])

AT_CLEANUP
