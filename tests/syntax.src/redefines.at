### OpenCOBOL Test Suite				-*- m4 -*-

## Copyright (C) 2003-2009 Keisuke Nishida
## Copyright (C) 2007-2009 Roger While
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2, or (at your option)
## any later version.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this software; see the file COPYING.  If not, write to
## the Free Software Foundation, 51 Franklin Street, Fifth Floor
## Boston, MA 02110-1301 USA

### ISO+IEC+1989-2002 13.16.42 REDEFINES clause

## 13.16.42.2 Syntax rules


# 1) DONE

AT_SETUP([REDEFINES: not following entry-name])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       01 Y             PIC 9 REDEFINES X.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:7: Error: REDEFINES clause must follow entry-name
])

AT_CLEANUP


# 2) DONE

AT_SETUP([REDEFINES: level 02 by 01])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G.
         02 X           PIC X.
       01 Y             REDEFINES X PIC 9.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:8: Error: Level number of REDEFINES entries must be identical
])

AT_CLEANUP

AT_SETUP([REDEFINES: level 03 by 02])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 G2.
           03 X         PIC X.
         02 Y           REDEFINES X PIC 9.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:9: Error: 'X' undefined in 'G1'
])

AT_CLEANUP

AT_SETUP([REDEFINES: level 66])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G.
         02 X           PIC X.
         66 A           RENAMES X.
         66 B           REDEFINES A PIC 9.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:9: Error: Level number of REDEFINES entry cannot be 66 or 88
prog.cob:9: Error: Level 66 item 'B' requires RENAMES clause
])

AT_CLEANUP

AT_SETUP([REDEFINES: level 88])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
         88 A           VALUE "A".
         88 B           REDEFINES A VALUE "B".
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:8: Error: syntax error, unexpected REDEFINES, expecting VALUE
])

AT_CLEANUP


# 3) TODO

# 4) TODO


# 5) DONE

AT_SETUP([REDEFINES: lower level number])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 G2.
           03 X         PIC X.
         02 G3.
           03 A         REDEFINES X PIC 9.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:10: Error: 'X' undefined in 'G3'
])

AT_CLEANUP


# 6) DONE

AT_SETUP([REDEFINES: with OCCURS])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G.
         02 X           PIC X OCCURS 2.
         02 Y           REDEFINES X PIC XX.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [0], ,
[prog.cob:8: Warning: The original definition 'X' should not have OCCURS
])

AT_CLEANUP

AT_SETUP([REDEFINES: with subscript])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 G2          OCCURS 2.
           03 X         PIC X.
           03 Y         REDEFINES X(1) PIC X.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:9: Error: 'X' cannot be subscripted here
])

AT_CLEANUP

AT_SETUP([REDEFINES: with variable occurrence])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X           PIC XX.
         02 Y           REDEFINES X PIC X OCCURS 1 TO 2 DEPENDING ON I.
       01 G2.
         02 X           PIC XX.
         02 Y           REDEFINES X.
           03 A         PIC X OCCURS 1 TO 2 DEPENDING ON I.
       01 G3.
         02 X.
           03 A         PIC X OCCURS 1 TO 2 DEPENDING ON I.
         02 Y           REDEFINES X PIC X.
       01 I             PIC 9.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:8: Error: 'Y' cannot be variable length
prog.cob:11: Error: 'Y' cannot be variable length
prog.cob:16: Error: The original definition 'X' cannot be variable length
])

AT_CLEANUP


# 7) DONE

AT_SETUP([REDEFINES: with qualification])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X           PIC X.
       01 G2.
         02 X           PIC X.
         02 A           REDEFINES X IN G1.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:10: Error: 'X' cannot be qualified here
prog.cob:10: Error: PICTURE clause required for 'A'
])

AT_CLEANUP


# 8) DONE

AT_SETUP([REDEFINES: multiple redefinition])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X           PIC X.
         02 A           REDEFINES X PIC 9.
         02 B           REDEFINES X PIC 9.
         02 C           REDEFINES B PIC 9.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:10: Error: 'B' not the original definition
])

AT_CHECK([${COMPILE_ONLY} -std=mvs prog.cob], [0])

AT_CLEANUP


# 9) DONE

AT_SETUP([REDEFINES: size exceeds])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X           PIC X.
         02 A           REDEFINES X PIC 99.
       01 G2.
         02 X           PIC X.
         02 A           REDEFINES X PIC 9 OCCURS 2.
       01 WRK-X         PIC X.
       01 WRK-X-REDEF   REDEFINES WRK-X PIC 99.
       01 EXT-X         PIC X EXTERNAL.
       01 EXT-X-REDEF   REDEFINES EXT-X PIC 99.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:8: Error: Size of 'A' larger than size of 'X'
prog.cob:11: Error: Size of 'A' larger than size of 'X'
prog.cob:15: Error: Size of 'EXT-X-REDEF' larger than size of 'EXT-X'
])

AT_CLEANUP


# 10) DONE

AT_SETUP([REDEFINES: with VALUE])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       01 A             REDEFINES X PIC X VALUE "A".
       01 G             REDEFINES X.
         02 B           PIC X VALUE "A".
       01 Y             REDEFINES X PIC X.
         88 C           VALUE "A".
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:7: Error: Entries under REDEFINES cannot have VALUE clause
prog.cob:9: Error: Entries under REDEFINES cannot have VALUE clause
])

AT_CLEANUP


# 11) DONE

AT_SETUP([REDEFINES: with intervention])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       01 Y             PIC X.
       01 A             REDEFINES X PIC X.
       01 G.
         02 G-X         PIC X.
         02 G-Y         PIC X.
         02 G-A         REDEFINES G-X PIC X.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [1], ,
[prog.cob:8: Error: REDEFINES must follow the original definition
prog.cob:12: Error: REDEFINES must follow the original definition
])

AT_CLEANUP


# 12) DONE

AT_SETUP([REDEFINES: within REDEFINES])
AT_KEYWORDS([redefines])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 X             PIC X.
       01 G             REDEFINES X.
         02 A           PIC X.
         02 B           REDEFINES A PIC 9.
       PROCEDURE        DIVISION.
           STOP RUN.
])

AT_CHECK([${COMPILE_ONLY} prog.cob], [0])

AT_CLEANUP


# 13) TODO

# 14) TODO

# 15) TODO

# 16) TODO
