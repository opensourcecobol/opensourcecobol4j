				opensource COBOL4j
		https://github.com/opensourcecobol/opensourcecobol4j

  ***
     NOTE
	This package is Developers Edition. So, this documentation is uncompleted.
	See the INSTALL file for a quick guide to install and run.
  ***

"opensource COBOL" is open-source COBOL compiler, an extension of the Japan-specific features.
"opensource COBOL4J" translates COBOL program to java code and compiles it using OpenJDK.

If you would like to contact us, please post to the mailing list below or the issue on github.
	ws-opensource-cobol-contact@osscons.jp
	https://github.com/opensourcecobol/deepimpact/issues

opensource COBOL was forked from OpenCOBOL in 2012.
See also OpenCOBOL project.
    http://www.opencobol.org/
    http://sourceforge.net/projects/open-cobol/

project opensourcecobol4j has been started from 2020.

This package contains the following subdirectories:

    cobc        COBOL compiler for java
    libcobj     COBOL run-time library for java
    bin         COBOL driver program (cobjrun) (Unimplemented)
    lib         static library and common headers
    config      configuration files
    po          international messages
    texi        Texinfo files
    tests       Test suite (Unimplemented)
    win32       Project files for Windows (Unimplemented)

All programs except those in lib and libcobj are distributed under
the GNU General Public License.  See COPYING for details.

Programs in lib and libcobj are distributed under the GNU Lesser
General Public License.  See COPYING.LIB for details.

See AUTHORS for the author of each file.

============
Requirements
============

  ***
     NOTE
	For all the following packages (required or optional),
	BOTH runtime AND development components are necessary.
  ***

opensource COBOL4J requires the following external libraries to be installed:

  o GNU Libtool (libltdl)
    http://www.gnu.org/software/libtool/libtool.html

    ***
	NOTE - libltdl is NOT needed when installing on Linux
	or Windows (including Cygwin and MingW).
    ***

    libltdl is used to implement dynamic CALL statements.

    GNU Libtool is distributed under GNU Lesser General Public License.

  **

The following libraries ARE required WHEN :

1) Indexed-Sequential file I/O is used

  o Oracle Berkeley DB Java Edition je-7.5.11 or later
    http://www.oracle.com/

    BOTH runtime AND development components required.

    Recommended is version je-7.5.11 is known to have problems.

    * NOTE *

    Berkeley DB Java Edition is distributed under the
	Apache License, Version 2.0.


============
Installation
============

  **
	NOTE
	Due to deficiencies in the tools used to prepare
	opensource COBOL (autoconf/automake/libtool), it is
	NOT generally possible to use path names with
	spaces embedded within them (Mainly Cygwin/MingW/Windows ports).
  **
 
To generate/install opensource COBOL on Linux:

**************************************

    ./configure
    make

    * NOTE *
    Test suite is Unimplemented.
    Now, `make check` is always error.
-----
 Here you may run
    make check
 to run a series of opensource COBOL test programs (must do!)
 This MUST succeed - If not, please report.
-----



    make install

** NOTE **
   On Linux systems, if you are installing for the
   -first- time, you may need to run "ldconfig" (as root).
   In fact, it does not hurt if you always do this.

** NOTE **
   On some Red Hat (Fedora) installations and
   possibly other Linux distros, /usr/local/lib
   is NOT automatically searched at runtime. 
   Edit /etc/ld.so.conf and add /usr/local/lib to the file.
   Rerun "ldconfig".

    ./compile_libcobj.sh
    export CLASSPATH="$CLASSPATH":***/opensourcecobol4j/libcobj/bin

** NOTE **
   libcobj's make is not ready yet, please run the alternative script.
   And, jar file add to CLASSPATH.

**************************************

If you think you have a problem or just want to
record the make output, just redirect the output thus :
    make 1>mymake.log 2>&1
    make install 1>myinstall.log 2>&1

**************************************

You can get back to a clean installation status by running :
    make distclean

**************************************

The "make install" will default to "/usr/local" as
the install path. You may override this by specifying
"--prefix=<your install path>" to the "./configure"
command.

***********************************************************

============

The following is only interesting for advanced use.
A normal user should not have recourse to use these
options.

There are the following configure options:

  --with-cc=<cc>		Specify C compiler command used by cobc
				Do not specify this unless you know what
				you are doing!

  --with-vbisam			Use VBISMA for Index file system. (Our recommendation)

  --with-db1			Use Berkeley DB 1.85 (libdb1/libdb-1.85)
				This overrides --with-db/--without-db

  --with-db			Use Berkeley DB 3.0 or later (libdb)
				This is the default

  --without-db			Do not use Berkeley DB
				You will not be able to use SORT/indexed I/O

  --with-dl			Use the system dynamic linker instead of ltdl
				This is the default
				(Note on Windows, native loading is used)

  --without-dl			Use ltdl for dynamic program loading

  --with-patch-level=<n>	Set internal patch level to n (default 0)

  --with-varseq=<n>		Define the format for variable length sequential
				files. For values of 0, 1 and 2, four bytes are
				written preceeding each record. The format of
				these four bytes for values of 0, 1, 2 is
				as follows :
				n = 0 (default)
					The first 2 bytes are the record length
					in big-endian order. This is compatible
					with mainframe. Bytes 3 and 4 are set
					to binary 0.
				n = 1
					The 4 bytes are the record length in
					big-endian order.
				n = 2
					The 4 bytes are the record length in
					native machine order (int).
					(This was previously the default)

				For the value of 3, two bytes are written
				preceeding each record :
				n = 3
					The first 2 bytes are the record length
					in big-endian order. The record follows
					immediately after beginning at byte 3.

  --enable-debug		Add '-g' debug option to make

============

============
Development
============

If you wish to hack the opensource COBOL source code, proceed
as follows.

You need to install the following extra packages with specified
minimum version before changing/building opensource COBOL:

For compiling :
  o Bison 1.875
  o Flex 2.5.4

If you reconfigure and/or prepare a distribution
  o Autoconf 2.59
  o Automake 1.9.6
  o Libtool 1.5.24
  o m4 1.4.2
  o Gettext 0.14.1
  o Texinfo 4.6 (For makeinfo)

If you modify top-level configure.ac, Makefile.am in any directory,
or any of the standard OC tests then you will need to
run "autoreconf -I m4" to regenerate the necessary files.
