name: Make a coverate report

on:
  push:
  pull_request:
    types: [opened, reopened, review_requested, synchronize]
  workflow_dispatch:

env:
  CLASSPATH: ":/usr/lib/opensourcecobol4j/libcobj.jar:/usr/lib/opensourcecobol4j/sqlite.jar"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
        
      - name: Install dependencies on Ubuntu 22.04
        run: |
          sudo apt update -y
          sudo apt install -y default-jdk build-essential bison flex gettext texinfo automake autoconf gcovr

      - name: Checkout opensource COBOL 4J
        uses: actions/checkout@v3
      
      - name: Install opensource COBOL 4J
        run: |
          curl -L -k -o libcobj/sqlite-jdbc/sqlite.jar https://github.com/xerial/sqlite-jdbc/releases/download/3.36.0.3/sqlite-jdbc-3.36.0.3.jar
          ./configure CFLAGS='-fprofile-arcs -ftest-coverage' --prefix=/usr/
          make
          sudo make install

      #- name: Run tests "command-line-options"
      #  run: |
      #    cd tests/
      #    ./command-line-options

      #- name: Run tests "misc"
      #  run: |
      #    cd tests/
      #    ./misc

      #- name: Run tests "data-rep"
      #  run: |
      #    cd tests/
      #    ./data-rep

      #- name: Run tests "i18n_sjis"
      #  run: |
      #    cd tests/
      #    ./i18n_sjis

      #- name: Run tests "jp-compat"
      #  run: |
      #    cd tests/
      #    ./jp-compat

      #- name: Run tests "run"
      #  run: |
      #    cd tests/
      #    ./run

      #- name: Run tests "syntax"
      #  run: |
      #    cd tests/
      #    ./syntax

      #- name: Run NIST test
      #  run: |
      #    cd tests/cobol85
      #    make test

      #- name: Run Extra NIST test
      #  run: |
      #    cd tests/cobol85
      #    make test-extra

      #    #- name: Run tests "i18n_utf8"
      #    #  run: |
      #    #    ./configure --prefix=/usr/ --with-vbisam --enable-utf8
      #    #    make
      #    #    make install
      #    #    ./i18n_utf8 || true
      #    #    cd ../

      #- name: Make a coverage report
      #  run: |
      #    cd cobj
      #    gcov -l *.gcda
      #    gcovr -r . --html -o report.html
      #    mkdir coverage-report
      #    cp *.gcno *.gcda *.gcov report.html coverage-report

      #- name: Archive a coverage report
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: code-coverage-report
      #    path: cobj/coverage-report/