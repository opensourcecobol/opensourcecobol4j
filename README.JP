				opensource COBOL4j
		https://github.com/opensourcecobol/opensourcecobol4j

注:
このパッケージは開発者版です。このドキュメントも完全ではありません。
簡単なインストール、実行手順はINSTALLファイル等を参考にしてください。


"opensource COBOL" は日本の商習慣に対応した機能を追加したオープンソースのCOBOLコンパイラです。
"opensource COBOL4J"はCOBOLプログラムをJAVAのコードに変換し、OpenJDK等を利用してコンパイルします。

何か問題がありましたら、以下メーリングリストか、githubのissueにて連絡してください。
	ws-opensource-cobol-contact@osscons.jp
	https://github.com/opensourcecobol/deepimpact/issues

opensource COBOLは２０１２年にOpenCOBOLからフォークしました。
OpenCOBOLプロジェクトも参照してください。
    http://www.opencobol.org/
    http://sourceforge.net/projects/open-cobol/

opensource COBOL4J プロジェクトは2020年から開始しています。

opensource COBOL4Jは以下のサブディレクトリからなります:

    cobc        Java向けのCOBOLコンパイラ
    libcobj     JavaになったCOBOLプログラムを動作させるランタイムライブラリ
    bin         COBOLプログラムの実行用ドライバ (cobjrun) ** 未対応
    lib         静的ライブラリとヘッダーファイル
    config      COBOL動作仕様の設定ファイル
    po          他言語翻訳ファイル
    texi        Texinfoファイル
    tests       テストパッケージ (Unimplemented)
    win32       Visual Stadio用のプロジェクトファイル (Unimplemented)

libとlibcobj、libcobcを除くすべてのプログラムはGNU General Public Licenseで配布しています。
詳細はCOPYINGファイルを参照してください。

libとlibcobj、libcobcはGNU Lesser General Public Licenseで配布しています。
詳細はCOPYING.LIBファイルを参照してください。

AUTHORSファイルにはそれぞれのファイルの著者を記載しています。

============
Requirements/必要パッケージ
============

  ***
     注意
	以下に記載するすべてのパッケージでは、
	runtimeだけでなくdevelopmentコンポーネントもインストールする必要があります。.
  ***

opensource COBOL4J では以下の外部ライブラリのインストールが必要です。

  o GNU Libtool (libltdl)
    http://www.gnu.org/software/libtool/libtool.html

    ***
	注意 - LinuxまたはWindows（CygwinおよびMingWを含む）にインストールする場合、
	libltdlは必要ありません。
    ***

    libltdlは動的CALL文にて利用されます。

    GNU LibtoolはGNU Lesser General Public Licenseで配布されています。

  **

以下ライブラリは必要な場合に導入します :

1) 索引ファイルを利用する場合

  o Oracle Berkeley DB Java Edition je-7.5.11 or later
    http://www.oracle.com/

    推奨されるバージョンはje-7.5.11です。

    * NOTE *

    Berkeley DB Java EditionはApache License, Version 2.0で配布しています。


============
Installation/インストール方法
============

  **
	注意
	opensource COBOLの準備に使用されるツール（autoconf / automake / libtool）に
	問題があるため、スペースが埋め込まれたパス名（主にCygwin / MingW / Windowsポート）
	を使用することはできません。
  **
 
Linuxでのopensource COBOL4Jの標準的なインストール方法:

**************************************

    ./configure
    make

    * 注意 *
    テストパッケージは現状未対応です。
    `make check`は常にエラーとなります。
    少々お待ちください。
----
 以下で実行を試せます。
    make check
 一連のopensource COBOL4Jのテストを実行します（実行する必要があります）。
 このテストは成功になる必要があります。失敗した場合には、レポートを送ってください。
----

    make install

** 注意 **
   Linuxでの初回起動ではrootで"ldconfig"を実行する必要がある場合があります。

** NOTE **
   一部のRed Hat (Fedora)などでは`/usr/local/lib`を
   自動的に検出しない場合があります。
   その際は`/etc/ld.so.conf`を編集し、`/usr/local/lib`を追加してください。
   その後、"ldconfig"が必要になると思います。

    ./compile_libcobj.sh
    export CLASSPATH="$CLASSPATH":***/opensourcecobol4j/libcobj/bin

** NOTE **
   libcobjのコンパイルはmakeファイルで未サポートです。
   変わりにこのスクリプトを実行し、jarをクラスパスに追加してください。

**************************************

何か問題があった場合には、malkeの出力を
リダイレクトして確認してください :
    make 1>mymake.log 2>&1
    make install 1>myinstall.log 2>&1

**************************************

アンインストールする場合には以下を実行してください :
    make distclean

**************************************

"make install"は標準で"/usr/local"がインストールパスになります。
"./configure"の"--prefix=<your install path>"オプションで変更できます。

***********************************************************

============

以下、高度なオプションで一般的には使用しなくても問題ありません。

以下はconfigureのオプションです:

  --with-cc=<cc>		特定のCコンパイラを指定したい場合に設定します。

  --with-vbisam			索引ファイルにVBISAMを利用します。opensource COBOLの推奨です。

  --with-db1			索引ファイルにBerkeley DB 1.85 (libdb1/libdb-1.85)を利用します。

  --with-db			索引ファイルにBerkeley DB 3.0 or later (libdb)を利用します。
					標準の設定です。

  --without-db			索引ファイルや内部機能を利用しない場合に選択します。

  --with-dl			ltdlによる動的リンクを利用します。
					標準の設定です。
					(Windowsでは、Windows標準のコールを利用します。)

  --without-dl			動的リンクを利用しません

  --with-patch-level=<n>	内部パッチレベルをnに設定します (通常は 0)

  --with-varseq=<n>		可変長の順編成ファイルのフォーマットを指定します。
						nは0、1、2、または任意のバイト長を設定でき、
						0～2の場合に以下の動作になります。
				n = 0 (標準)
					最初の2バイトにレコード長を格納します。
					値はビッグエンディアンで保存されます。
					これはメインフレーム互換です。
				n = 1
					最初の4バイトにレコード長を格納します。
					値はビッグエンディアンで保存されます。
				n = 2
					最初の4バイトにレコード長を格納します。
					値は動作環境の標準数値で表されます(int型）

  --enable-debug		デバッグを有効にするため、'-g'オプションをmake時に追加します。

============

============
Development/開発時
============

opensource COBOLをハックする際には以下の手順でおこなえます。

opensource COBOLを修正、ビルドする場合に、以下の追加パッケージが必要です:

コンパイル時:
  o Bison 1.875
  o Flex 2.5.4

configureやmake等を修正する場合:
  o Autoconf 2.59
  o Automake 1.9.6
  o Libtool 1.5.24
  o m4 1.4.2
  o Gettext 0.14.1
  o Texinfo 4.6 (For makeinfo)

configure.ac, Makefile.amを修正するか、テストを変更する場合、
"autoreconf -I m4"を実行して、必要なファイルを再生成する必要があります。
